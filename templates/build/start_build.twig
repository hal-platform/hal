{% extends 'base.twig' %}
{% import 'macros.twig' as macros %}
{% import 'macros.start_deployment.twig' as deploy_macros %}
{% import 'macros.form.twig' as form_macros %}
{% import 'build/macros.twig' as build_macros %}
{% import 'build/macros.start_build.twig' as start_build_macros %}

{% set js_components = ['start_build'] %}
{% set page_title = 'Start Build' %}

{% set alert_message = "Just what do you think you're doing, Dave?" %}
{% set alert_details = 'I cannot find a git reference for your search query. However if you attempt to build using this query, I will use my enormous intellect to fulfill the mission.' %}
{% if is_serious_business_mode %}
    {% set alert_message = 'A git reference cannot be found from your search query. Hal will attempt to resolve this reference on the backend.' %}
    {% set alert_details = '' %}
{% endif %}

{% block breadcrumb_links %}
    <li><a href="{{ uriFor('applications') }}">Applications</a></li>
    <li><a href="{{ uriFor('application', {'application': application.id}) }}">{{ application.name }}</a></li>
    <li><a href="{{ uriFor('application.dashboard', {'application': application.id}) }}">Dashboard</a></li>
{% endblock %}

{% block content %}
    {{ form_macros.form_errors(errors, is_csrf_error) }}

    <form method="post" name="start-build">
        {{ form_macros.csrf_input('build.start') }}

        <h2>Select Source Code</h2>
        {{ block('select_source_code') }}

        {{ block('start_build_button') }}

        <h2>Select Environment</h2>
        {{ block('select_environment') }}

        {% if environments %}
            {{ block('start_build_button') }}

            <h2 class="mbn">Select Target <small>(optional)</small></h2>
            {{ block('select_deploy_targets') }}
        {% endif %}

        {{ block('start_build_button') }}
    </form>

{% endblock %}

{% block start_build_button %}
    <p>
        <button class="btn btn--action" type="submit">Start Build</button>
        <a href="{{ uriFor('application.dashboard', {application: application.id}) }}">Cancel</a>
    </p>
{% endblock %}

{% block select_source_code %}
    {# Dynamic warning, for when Hal cannot find a matching radio option #}
    {% set warning_label = is_serious_business_mode ? 'Start Build?' : 'Start Build. Maybe?' %}
    <div class="js-build-warning" data-label="Start Build" data-label-warning="{{ warning_label }}">
        {{ macros.alert('warning', alert_message, alert_details) }}
    </div>

    <ul class="form-fields">
        <li class="mbn js-search-container">
            <label for="js-search-input">Search for a Branch, Tag, Pull Request, or enter a Commit ID.</label>
            <input id="js-search-input" class="text-input" type="text" name="search" autocomplete="off" value="{{ form.search }}" maxlength="200">

            {% if gh_branches|length or gh_tags|length or gh_pr_open|length or gh_pr_closed|length %}
                {% set use_dynamic_search = 'js-search-drop' %}
            {% endif %}

            <div class="{{ use_dynamic_search }}">
                <ul class="js-search-results">
                    {% for branch in gh_branches %}
                        {{ build_macros.search('branch', branch) }}
                    {% endfor %}
                    {% for tag in gh_tags %}
                        {{ build_macros.search('release', tag) }}
                    {% endfor %}
                    {% for pr in gh_pr_open %}
                        {{ build_macros.search('pull-request', pr) }}
                    {% endfor %}
                    {% for pr in gh_pr_closed %}
                        {{ build_macros.search('pull-request-closed', pr) }}
                    {% endfor %}
                </ul>
            </div>
        </li>
    </ul>

    <div class="tabs js-tabs">
        <a name="js-tab--branches" class="active">{{ macros.icon('branch') }} <span>Branches</span></a>
        <a name="js-tab--tags">{{ macros.icon('tag') }} <span>Releases</span></a>
        <a name="js-tab--pr-open">{{ macros.icon('pull', 'github-pr--open') }} <span>Open Pull Requests</span></a>
        <a name="js-tab--pr-closed">{{ macros.icon('pull', 'github-pr--closed') }} <span>Closed Pull Requests</span></a>
    </div>

    <div class="tab-content js-tab-content">
        {{ start_build_macros.build_tabs_branches(application, gh_branches) }}
        {{ start_build_macros.build_tabs_releases(application, gh_tags) }}
        {{ start_build_macros.build_tabs_pr_open(application, gh_pr_open) }}
        {{ start_build_macros.build_tabs_pr_closed(application, gh_pr_closed) }}
    </div>
{% endblock %}

{% block select_environment %}
    <p>
        Select <b>Any</b> to create a build that can be deployed to any environment.
    </p>

    <ul>
        {% set isSelected = form.environment == '!any' or environments|length == 0 %}
        <li>
            <label for="env-any">
                <input class="js-environment-selector" id="env-any" type="radio" name="environment" value="!any"{{ isSelected ? ' checked' : '' }}>
                Any (deploy to any environment)
            </label>
        </li>

        {% for env in environments %}
            {% set isSelected = form.environment == env.id %}
            <li>
                <label for="env-{{ env.id }}">
                    <input class="js-environment-selector" id="env-{{ env.id }}" type="radio" name="environment" value="{{ env.id }}"{{ isSelected ? 'checked' : '' }}>
                    {{ env.name }}
                </label>
            </li>
        {% endfor %}
    </ul>
{% endblock %}

{% block select_deploy_targets %}
    <p>
        Targets will only be deployed to if the build succeeds. Alternatively, you can manually deploy builds once finished.
    </p>

    <table class="table--spacing-medium">
        <thead>
            <tr>
                <th>Deployment</th>
                <th>Code Reference</th>
                <th>Last Released</th>
                <th class="js-toggle-container"></th>
            </tr>
        </thead>

        <tbody>
            {% for target in available_targets %}
                {{ deploy_macros.render_deployment_row(target, target.release, '', can_deploy) }}
            {% endfor %}
        </tbody>
    </table>
{% endblock %}

{% extends 'base.twig' %}
{% import 'macros.form.twig' as form_macros %}
{% import 'macros.twig' as macros %}

{% use 'target/partial.target_form.twig' %}

{% set js_components = ['add_target_form'] %}
{% set page_title = 'Add Deployment Target' %}

{% block breadcrumb_links %}
    <li><a href="{{ uriFor('applications') }}">Applications</a></li>
    <li><a href="{{ uriFor('application', {'application': application.id}) }}">{{ application.name }}</a></li>
    <li><a href="{{ uriFor('targets', {'application': application.id}) }}">Deployment Targets</a></li>
{% endblock %}

{% block content %}
    {{ block('meta') }}

    {% if selected_environment %}
        {{ block('add_form') }}
    {% else %}
        {{ block('env_picker') }}
    {% endif %}

{% endblock %}

{% block meta %}
    <ul class="meta-box">
        <li>
            <h6>Application</h6>
            {{ application.name }}
        </li>

        {% if selected_environment %}
            <li>
                <h6>Environment</h6>
                {{ selected_environment.name }}
                <a href="{{ uriFor('target.add', {'application': application.id}) }}">Change environment</a>
            </li>
        {% endif %}
    </ul>
{% endblock %}

{% block env_picker %}
    <p>
        Select an environment to add deployment configuration.
    </p>

    <p>
        {% for env in environments %}
            <a class="btn" href="{{ uriFor('target.add', {'application': application.id}, {'environment': env.id}) }}">
                {% if env.isProduction %}
                    {{ macros.icon('key') }}
                {% endif %}
                {{ env.name }}
            </a>
        {% endfor %}
    </p>

{% endblock %}

{% block add_form %}
    {{ form_macros.form_errors(errors, is_csrf_error) }}

    <form method="post" class="js-target-form">
        {{ form_macros.csrf_input('target.add') }}

        <ul class="form-fields form-wrapper">
            <li>
                <label for="template">Template</label>
                {% if templates %}
                    <select class="select-input" name="template" id="template">
                        <option></option>
                        {% for template in templates %}
                            {% set is_selected = template.id == form.template ? ' selected' : '' %}
                            <option value="{{ template.id }}"{{ is_selected }}>{{ template.name }}</option>
                        {% endfor %}
                    </select>
                {% else %}
                   <p> No templates available for this environment.<p>
                {% endif %}
            </li>

            <li>
                <label>Deployment Type</label>
                <ul>
                    {% set is_selected = form.deployment_type == '' ? ' checked' : '' %}
                    <li>
                        <label for="type-noop">
                            <input type="radio" id="type-noop" name="deployment_type" value="" data-target-select data-target-type=""{{ is_selected }}>
                            None
                        </label>
                    </li>

                    {% for type in deployment_types %}
                        {% set is_selected = form.deployment_type == type ? ' checked' : '' %}
                        <li>
                            <label for="type-{{ type }}">
                                <input type="radio" id="type-{{ type }}" name="deployment_type" value="{{ type }}" data-target-select data-target-type="{{ type }}"{{ is_selected }}>
                                {{ type|target_type }}
                            </label>
                        </li>
                    {% endfor %}
                </ul>
            </li>

            <li>
                {% set has_error = form_macros.has_error(errors, 'name') ? ' is-error' : '' %}
                <label for="name">Name</label>
                <input class="text-input{{ has_error }}" type="text" name="name" id="name" maxlength="80" value="{{ form.name }}" required>
            </li>

            <li>
                {% set has_error = form_macros.has_error(errors, 'url') ? ' is-error' : '' %}
                <label for="url">URL</label>
                <input class="text-input{{ has_error }}" type="url" name="url" id="url" maxlength="200" value="{{ form.url }}" placeholder="https://{{ selected_environment.name }}.example.com">
                <small><b>Optional.</b> Add a URL to help users find where the project is deployed.</small>
            </li>

            <li>
                {% set has_error = form_macros.has_error(errors, 'script_context') ? ' is-error' : '' %}
                <label for="script_context">Script Context</label>
                <input class="text-input{{ has_error }}" type="text" name="script_context" id="script_context" maxlength="100" value="{{ form.script_context }}">
                <small>
                    <b>Optional.</b> Pass extra context text or data to your scripts and commands in your <code>.hal9000.yml</code> configuration.
                    <b style="color:indianred">Do not use this for secrets!</b>
                </small>
            </li>

        </ul>

        <hr>

        <ul class="form-fields form-wrapper">

            {{ block('rsync_fields') }}
            {{ block('script_fields') }}
            {{ block('aws_fields') }}
            {{ block('codedeploy_fields') }}
            {{ block('beanstalk_fields') }}
            {{ block('s3_only_fields') }}
            {{ block('s3_fields') }}

            <li data-type-specific data-s3 data-eb data-cd>
                {% set has_error = form_macros.has_error(errors, 'credential') ? ' is-error' : '' %}
                <label for="credential">Credentials</label>
                <select class="select-input{{ has_error }}" name="credential" id="credential">
                    <option></option>
                    {% for credential in credentials %}
                        {% set is_selected = form.credential == credential.id ? ' selected' : '' %}
                        <option value="{{ credential.id }}"{{ is_selected }}>{{ credential.name }} ({{ credential.formatType() }})</option>
                    {% endfor %}
                </select>
                <small>
                    Credentials are required for AWS-based deployments.
                </small>
            </li>
        </ul>

        <p>
            <button type="submit" class="btn btn--action">Add Target</button>
            <a href="{{ uriFor('targets', {'application': application.id}) }}">Cancel</a>
        </p>

    </form>

{% endblock %}

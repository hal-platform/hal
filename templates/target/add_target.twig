{% extends 'base.twig' %}
{% import 'macros.form.twig' as form_macros %}
{% import 'macros.twig' as macros %}

{% set js_components = ['add_target_form'] %}

{% set page_title = 'Add Target : ' ~ application.name %}

{% block content %}
    <h1>Add Target - <b>{{ application.name }}</b></h1>

    <div class="details-box">
        <ul>
            <li>
                <h6>Application</h6>
                <a href="{{ uriFor('application', {'application': application.id}) }}">{{ application.name }}</a>
            </li>

            {% if selected_environment %}
                <li>
                    <h6>Environment</h6>
                    {{ selected_environment.name }}
                    <a href="{{ uriFor('target.add', {'application': application.id}) }}">Change environment</a>
                </li>
            {% endif %}
        </ul>
    </div>

    <p>
        Target deployment relationships define what servers your application can be deployed to and where on that server the code will be placed.
    </p>

    {% if selected_environment %}
        <div class="form-wrapper js-dynamic-targets">
            {{ form_macros.formErrors(errors) }}

            {{ block('add_form') }}
        </div>
    {% else %}
        {{ block('env_picker') }}
    {% endif %}

{% endblock %}

{% block env_picker %}

    <p>
        Select a datacenter provider and environment.
    </p>

    <ul class="radio-grid radio-grid--tri">
        {% for env in environments %}
            <li>
                <a class="radio-grid--fake-item" href="{{ uriFor('target.add', {'application': application.id}, {'environment': env.id}) }}">
                    {% if env.isProduction %}
                        {{ macros.icon('key') }}
                    {% endif %}
                    {{ env.name }}
                </a>
            </li>
        {% endfor %}
    </ul>

{% endblock %}

{% block add_form %}

    <form method="post" action="{{ uriFor('target.add', {application: application.id}, {'environment': selected_environment.id}) }}">

        <ul class="form-fields">
            <li>
                <label for="group">Group</label>
                <select class="select-input" name="group" id="group" required>
                    <option></option>
                    {% for group in groups %}
                        {% set isSelected = (group.id == form.group) %}
                        <option value="{{ group.id }}"{{ isSelected ? ' selected' : '' }} data-target-type="{{ group.type }}">{{ group.format(false) }}</option>
                    {% endfor %}
                </select>
            </li>

            <li>
                <label for="name">Name</label>
                <input class="text-input" type="text" name="name" id="name" maxlength="80" value="{{ form.name }}" pattern="^[^\n\t]+">
                <small class="additional">
                    Optionally, give a target a unique name.
                </small>
            </li>

            <li>
                <label for="url">URL</label>
                <input class="text-input" type="url" name="url" id="url" maxlength="200" value="{{ form.url }}">
                <small class="additional">Add a URL to help users find where the code is deployed.</small>
            </li>

            {#
                Script
            #}
            <li>
                <label for="script_context">
                    Script Context
                </label>
                <input class="text-input" type="text" name="script_context" id="script_context" maxlength="100" value="{{ form.script_context }}" pattern="^[^\n\t]+">
                <small class="additional">
                    Optionally, pass extra context text or data to your scripts and commands in your <code>.hal9000.yml</code> configuration.
                    <b>Do not use this for secrets!</b>
                </small>
            </li>

        </ul>

        <hr>

        <ul class="form-fields">

            {#
                RSYNC
            #}
            <li data-type-specific data-rsync>
                <label for="path">
                    File path
                </label>
                <input class="text-input" type="text" name="path" id="path" maxlength="200" value="{{ form.path }}" pattern="^\/[^\n\t]+">
                <small class="additional">
                    The absolute path to the file directory on the server.
                    Paths must begin with a forward slash (/).
                </small>
            </li>


            {#
                CodeDeploy
            #}
            <li data-type-specific data-cd>
                <label for="cd_name">
                    CodeDeploy Application Name
                </label>
                <input class="text-input" type="text" name="cd_name" id="cd_name" maxlength="100" value="{{ form.cd_name }}" pattern="^[^\n\t]+">
            </li>

            <li data-type-specific data-cd>
                <label for="cd_group">
                    CodeDeploy Deployment Group
                </label>
                <input class="text-input" type="text" name="cd_group" id="cd_group" maxlength="100" value="{{ form.cd_group }}" pattern="^[^\n\t]+">
            </li>

            <li data-type-specific data-cd>
                <label for="cd_config">
                    CodeDeploy Configuration
                </label>
                <input class="text-input" type="text" name="cd_config" id="cd_config" maxlength="100" value="{{ form.cd_config }}" pattern="^[^\n\t]+">
            </li>


            {#
                Elastic Beanstalk
            #}
            <li data-type-specific data-eb>
                <label for="eb_name">
                    Elastic Beanstalk Application Name
                </label>
                <input class="text-input" type="text" name="eb_name" id="eb_name" maxlength="100" value="{{ form.eb_name }}" pattern="^[^\n\t]+">
            </li>

            <li data-type-specific data-eb>
                <label for="eb_environment">
                    Elastic Beanstalk Environment Name or ID
                </label>
                <input class="text-input" type="text" name="eb_environment" id="eb_environment" maxlength="100" value="{{ form.eb_environment }}" pattern="^[^\n\t]+">
            </li>

            {#
                S3
            #}
            <li data-type-specific data-s3 data-eb data-cd>
                <label for="s3_bucket">
                    S3 Bucket
                </label>
                <input class="text-input" type="text" name="s3_bucket" id="s3_bucket" maxlength="100" value="{{ form.s3_bucket }}" pattern="^[^\n\t]+">
            </li>

            <li data-type-specific data-s3 data-eb data-cd>
                <label for="s3_method">
                    S3 Method
                </label>
                <select class="select-input" name="s3_method" id="s3_method">
                    {% for method in s3_methods %}
                        {% set isSelected = (method == form.s3_method) %}
                        <option value="{{ method }}"{{ isSelected ? ' selected' : '' }}>{{ method }}</option>
                    {% endfor %}
                </select>
            </li>

            <li data-type-specific data-s3 data-eb data-cd>
                <label for="s3_local_path">
                    S3 Local Path
                </label>
                <input class="text-input" type="text" name="s3_local_path" id="s3_local_path" maxlength="100" value="{{ form.s3_local_path }}" pattern="^[^\n\t]+">
                <small>
                    <br>Leave blank to use <code>.</code>.
                </small>
            </li>

            <li data-type-specific data-s3 data-eb data-cd>
                <label for="s3_remote_path">
                    S3 Remote Path
                </label>
                <input class="text-input" type="text" name="s3_remote_path" id="s3_remote_path" maxlength="100" value="{{ form.s3_remote_path }}" pattern="^[^\n\t]+">
                <small class="additional">
                    Available placeholders:
                    <ul class="inline-list--comma">
                        <li><code>$APPID</code></li>
                        <li><code>$APPNAME</code></li>
                        <li><code>$BUILDID</code></li>
                        <li><code>$PUSHID</code></li>
                        <li><code>$DATE</code> (YYYYMMDD)</li>
                        <li><code>$TIME</code> (HHMMSS)</li>
                    </ul>
                    <br>Leave blank to use <code>$PUSHID.tar.gz</code> (S3) or <code>$APPID/$PUSHID.(zip|tar.gz)</code> (EB, CD).
                </small>
            </li>

            <li data-type-specific data-s3 data-eb data-cd data-elb>
                <label for="credential">Credentials</label>
                <select class="select-input" name="credential" id="credential">
                    <option></option>
                    {% for credential in credentials %}
                        {% set isSelected = (credential.id == form.credential) %}

                        {% if credential.type == 'aws_assume' %}
                            {% set type = 'AWS Role' %}
                        {% elseif credential.type == 'aws_static' %}
                            {% set type = 'AWS Static' %}
                        {% else %}
                            {% set type = 'N/A' %}
                        {% endif %}

                        <option value="{{ credential.id }}"{{ isSelected ? ' selected' : '' }}>{{ credential.name }} ({{ type }})</option>
                    {% endfor %}
                </select>
                <small class="additional">
                    Credentials are required for AWS-based deployments.
                </small>
            </li>
        </ul>

        <ul>
            <li><input class="btn btn--action" type="submit" value="Add Target"></li>
            <li><a class="btn" href="{{ uriFor('targets', {'application': application.id}) }}">Cancel</a></li>
        </ul>

    </form>

{% endblock %}

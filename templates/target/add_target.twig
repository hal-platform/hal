{% extends 'base.twig' %}
{% import 'macros.form.twig' as form_macros %}
{% import 'macros.twig' as macros %}

{% set js_components = ['add_target_form'] %}

{% set page_title = 'Add Deployment Target' %}

{% block breadcrumb_links %}
    <li><a href="{{ uriFor('applications') }}">Applications</a></li>
    <li><a href="{{ uriFor('application', {'application': application.id}) }}">{{ application.name }}</a></li>
    <li><a href="{{ uriFor('targets', {'application': application.id}) }}">Deployment Targets</a></li>
{% endblock %}

{% block content %}
    {{ block('meta') }}

    {% if selected_environment %}
        {{ block('add_form') }}
    {% else %}
        {{ block('env_picker') }}
    {% endif %}

{% endblock %}

{% block meta %}
    <ul class="meta-box">
        <li>
            <h6>Application</h6>
            {{ application.name }}
        </li>

        {% if selected_environment %}
            <li>
                <h6>Environment</h6>
                {{ selected_environment.name }}
                <a href="{{ uriFor('target.add', {'application': application.id}) }}">Change environment</a>
            </li>
        {% endif %}
    </ul>
{% endblock %}

{% block env_picker %}
    <p>
        Select an environment to add deployment configuration.
    </p>

    <p>
        {% for env in environments %}
            <a class="btn" href="{{ uriFor('target.add', {'application': application.id}, {'environment': env.id}) }}">
                {% if env.isProduction %}
                    {{ macros.icon('key') }}
                {% endif %}
                {{ env.name }}
            </a>
        {% endfor %}
    </p>

{% endblock %}

{% block add_form %}
    {{ form_macros.form_errors(errors, is_csrf_error) }}

    <form method="post" class="js-targets-form" action="{{ uriFor('target.add', {application: application.id}, {'environment': selected_environment.id}) }}">
        {{ form_macros.csrf_input('target.add') }}

        <ul class="form-fields form-wrapper">
            <li>
                <label for="template">Template</label>
                {% if templates %}
                    <select class="select-input" name="template" id="template" required data-target-select>
                        <option></option>
                        {% for template in templates %}
                            {% set isSelected = (template.id == form.template) %}
                            <option value="{{ template.id }}"{{ isSelected ? ' selected' : '' }} data-target-type="{{ template.type }}">{{ template.format() }}</option>
                        {% endfor %}
                    </select>
                {% else %}
                    No templates available.
                {% endif %}
            </li>

            <li>
                <label>Deployment Type</label>
                <ul>
                    {% for type in deployment_types %}
                        {% set is_selected = form.deployment_type == type ? ' checked' : '' %}
                        <li>
                            <label for="type-{{ type }}">
                                <input type="radio" id="type-{{ type }}" name="deployment_type" value="{{ type }}" data-target-select data-target-type="{{ type }}"{{ is_selected }}>
                                {% if type == 'rsync' -%}
                                    RSync (On-premises Linux)
                                {%- elseif type == 'eb' -%}
                                    Elastic Beanstalk (AWS)
                                {%- elseif type == 'cd' -%}
                                    CodeDeploy (AWS)
                                {%- elseif type == 's3' -%}
                                    S3 (AWS)
                                {%- elseif type == 'script' -%}
                                    Script (Any)
                                {%- endif %}
                            </label>
                        </li>
                    {% endfor %}
                </ul>
            </li>

            <li>
                <label for="name">Name</label>
                <input class="text-input" type="text" name="name" id="name" maxlength="80" value="{{ form.name }}" required>
            </li>

            <li>
                <label for="url">URL</label>
                <input class="text-input" type="url" name="url" id="url" maxlength="200" value="{{ form.url }}" placeholder="https://{{ selected_environment.name }}.example.com">
                <small><b>Optional.</b> Add a URL to help users find where the project is deployed.</small>
            </li>

            <li>
                <label for="script_context">Script Context</label>
                <input class="text-input" type="text" name="script_context" id="script_context" maxlength="100" value="{{ form.script_context }}">
                <small>
                    <b>Optional.</b> Pass extra context text or data to your scripts and commands in your <code>.hal9000.yml</code> configuration.
                    <b style="color:indianred">Do not use this for secrets!</b>
                </small>
            </li>

        </ul>

        <hr>

        <ul class="form-fields form-wrapper">

            {#
                RSYNC
            #}
            <li data-type-specific data-rsync>
                <label for="rsync_servers">Server hostnames</label>
                <input class="text-input" type="text" name="rsync_servers" id="rsync_servers" maxlength="200" value="{{ form.rsync_servers }}">
                <small>
                    The absolute path to the file directory on the server.
                    Paths must begin with a forward slash (/).
                </small>
            </li>

            <li data-type-specific data-rsync>
                <label for="rsync_path">File path</label>
                <input class="text-input" type="text" name="rsync_path" id="rsync_path" maxlength="200" value="{{ form.rsync_path }}" pattern="^\/[^\n\t]+">
                <small>
                    The absolute path to the file directory on the server.
                    Paths must begin with a forward slash (/).
                </small>
            </li>

            <li data-type-specific data-s3 data-eb data-cd>
                <label for="aws_region">AWS Region</label>
                <select class="select-input" name="aws_region" id="aws_region">
                    <option></option>
                    {% for region in aws_regions %}
                        {% set is_selected = form.aws_region == region ? ' selected' : '' %}
                        <option value="{{ region }}"{{ is_selected }}>{{ region }}</option>
                    {% endfor %}
                </select>
            </li>

            {#
                CodeDeploy
            #}
            <li data-type-specific data-cd>
                <label for="cd_name">CodeDeploy Application Name</label>
                <input class="text-input" type="text" name="cd_name" id="cd_name" maxlength="100" value="{{ form.cd_name }}">
            </li>

            <li data-type-specific data-cd>
                <label for="cd_group">CodeDeploy Deployment Group</label>
                <input class="text-input" type="text" name="cd_group" id="cd_group" maxlength="100" value="{{ form.cd_group }}">
            </li>

            <li data-type-specific data-cd>
                <label for="cd_config">CodeDeploy Configuration</label>
                <input class="text-input" type="text" name="cd_config" id="cd_config" maxlength="100" value="{{ form.cd_config }}">
            </li>


            {#
                Elastic Beanstalk
            #}
            <li data-type-specific data-eb>
                <label for="eb_name">Elastic Beanstalk Application Name</label>
                <input class="text-input" type="text" name="eb_name" id="eb_name" maxlength="100" value="{{ form.eb_name }}">
            </li>

            <li data-type-specific data-eb>
                <label for="eb_environment">Elastic Beanstalk Environment Name or ID</label>
                <input class="text-input" type="text" name="eb_environment" id="eb_environment" maxlength="100" value="{{ form.eb_environment }}">
            </li>

            {#
                S3
            #}
            <li data-type-specific data-s3 data-eb data-cd>
                <label for="s3_bucket">S3 Bucket</label>
                <input class="text-input" type="text" name="s3_bucket" id="s3_bucket" maxlength="100" value="{{ form.s3_bucket }}">
            </li>

            <li data-type-specific data-s3>
                <label for="s3_method">S3 Method</label>
                <select class="select-input" name="s3_method" id="s3_method">
                    <option></option>
                    {% for method in s3_methods %}
                        {% set is_selected = form.s3_method == method ? ' selected' : '' %}
                        <option value="{{ method }}"{{ is_selected }}>{{ method }}</option>
                    {% endfor %}
                </select>
            </li>

            <li data-type-specific data-s3>
                <label for="s3_local_path">S3 Local Path</label>
                <input class="text-input" type="text" name="s3_local_path" id="s3_local_path" maxlength="100" value="{{ form.s3_local_path }}">
                <small>
                    Leave blank to use <code>.</code>.
                </small>
            </li>

            <li data-type-specific data-s3 data-eb data-cd>
                <label for="s3_remote_path">S3 Remote Path</label>
                <input class="text-input" type="text" name="s3_remote_path" id="s3_remote_path" maxlength="100" value="{{ form.s3_remote_path }}">
                <small>
                    Available placeholders:
                    <ul class="inline-list--comma">
                        <li><code>$APPID</code></li>
                        <li><code>$APPNAME</code></li>
                        <li><code>$BUILDID</code></li>
                        <li><code>$PUSHID</code></li>
                        <li><code>$DATE</code> (YYYYMMDD)</li>
                        <li><code>$TIME</code> (HHMMSS)</li>
                    </ul>
                    <br>Leave blank to use <code>$PUSHID.tar.gz</code> (S3) or <code>$APPID/$PUSHID.(zip|tar.gz)</code> (EB, CD).
                </small>
            </li>

            <li data-type-specific data-s3 data-eb data-cd>
                <label for="credential">Credentials</label>
                <select class="select-input" name="credential" id="credential">
                    <option></option>
                    {% for credential in credentials %}
                        {% set is_selected = form.credential == credential.id ? ' selected' : '' %}
                        <option value="{{ credential.id }}"{{ is_selected }}>{{ credential.name }} ({{ credential.formatType() }})</option>
                    {% endfor %}
                </select>
                <small>
                    Credentials are required for AWS-based deployments.
                </small>
            </li>
        </ul>

        <p>
            <button class="btn btn--action" type="submit">Add Target</button>
            <a href="{{ uriFor('targets', {'application': application.id}) }}">Cancel</a>
        </p>

    </form>

{% endblock %}

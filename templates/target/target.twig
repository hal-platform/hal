{% extends 'base.twig' %}
{% import "macros.twig" as macros %}

{% set page_title = 'Target : ' ~ application.name %}

{% set can_edit = current_authorizations.isSuper() or current_authorizations.isOwnerOf(application) %}

{% block content %}
    <div class="nav--page">
        <h1>Deployment Target - <b>{{ application.name }}</b></h1>

        <p class="nav--page__back">
            <a class="btn btn--small btn--back" href="{{ uriFor('application', {'application': application.id}) }}">Back to Application</a>
        </p>
    </div>

    <div class="details-box">
        <ul>
            <li>Application</li>
            <li><a href="{{ uriFor('application', {'application': application.id}) }}">{{ application.name }}</a></li>

            <li>Group</li>
            <li><a href="{{ uriFor('group', {'group': target.group.id}) }}">{{ target.group.format(false) }}</a></li>

            <li>Environment</li>
            <li>{{ target.group.environment.name }}</li>
        </ul>
    </div>

    <h4>Name</h4>
    <p>{{ target.name ?: 'None' }}</p>

    <h4>Type</h4>
    <p>{{ target.group.format }}</p>

    {% if target.group.isAWS %}

        <h4>Credentials</h4>
        <p>
            {% if target.credential %}
                {{ target.credential.name }}
                {% if target.credential.type == 'aws' %}
                    (AWS)
                {% elseif target.credential.type == 'privatekey' %}
                    (Private Key)
                {% endif %}

            {% else %}
                {{ macros.status('None', 'error', 'spam-2') }}
            {% endif %}
        </p>
    {% endif %}

    {% if target.group.type == 'rsync' %}

        <h4>File path</h4>
        <p><code>{{ target.parameter('path') }}</code></p>

    {% elseif target.group.type == 'eb' %}

        <h4>Elastic Beanstalk Application Name</h4>
        <p><code>{{ target.parameter('application') }}</code></p>

        <h4>Elastic Beanstalk Environment</h4>
        <p><code>{{ target.parameter('environment') }}</code></p>

        <h4>S3 Bucket</h4>
        <p><code>{{ target.parameter('bucket') }}</code></p>

        <h4>S3 File</h4>
        <p><code>{{ target.parameter('path') ?: '$APPID/$PUSHID.zip' }}</code></p>

    {% elseif target.group.type == 's3' %}

        <h4>S3 Method</h4>
        <p><code>{{ target.parameter('s3_method') }}</code></p>

        <h4>S3 Bucket</h4>
        <p><code>{{ target.parameter('bucket') }}</code></p>

        <h4>S3 Source</h4>
        <p><code>{{ target.parameter('source') ?: '.' }}</code></p>

        <h4>S3 Destination</h4>
        <p><code>{{ target.parameter('path') }}</code></p>

    {% elseif target.group.type == 'cd' %}

        <h4>CodeDeploy Application Name</h4>
        <p><code>{{ target.parameter('application') }}</code></p>

        <h4>CodeDeploy Deployment Group</h4>
        <p><code>{{ target.parameter('group') }}</code></p>

        <h4>CodeDeploy Configuration</h4>
        <p><code>{{ target.parameter('configuration') }}</code></p>

        <h4>S3 Bucket</h4>
        <p><code>{{ target.parameter('bucket') }}</code></p>

        <h4>S3 File</h4>
        <p><code>{{ target.parameter('path') ?: '$APPID/$PUSHID.zip' }}</code></p>

    {% endif %}

    <h4>Script Context</h4>
    <p><code>{{ target.parameter('context') ?: 'None' }}</code></p>

    <h4>URL</h4>
    <p>
        {% if target.url %}
            <a href="{{ target.url }}">{{ target.url }}</a>
        {% else %}
            None
        {% endif %}
    </p>

    <ul>
        <li><a class="btn" href="{{ uriFor('targets', {'application': application.id}) }}">Deployment Targets</a></li>
        {% if can_edit %}
            <li><a class="btn btn--action" href="{{ uriFor('target.edit', {'application': application.id, 'target': target.id}) }}">Edit Target</a></li>
            <li><a class="btn btn--destructive" href="{{ uriFor('target.remove', {'application': application.id, 'target': target.id}) }}">Remove Target</a></li>
        {% endif %}
    </ul>

{% endblock %}

{% extends 'base.twig' %}
{% import 'macros.twig' as macros %}

{% set page_title = 'Deployment Target' %}

{% set can_edit = current_authorizations.isSuper() or current_authorizations.isOwnerOf(application) %}

{% block breadcrumb_links %}
    <li><a href="{{ uriFor('applications') }}">Applications</a></li>
    <li><a href="{{ uriFor('application', {'application': application.id}) }}">{{ application.name }}</a></li>
    <li><a href="{{ uriFor('targets', {'application': application.id}) }}">Deployment Targets</a></li>
{% endblock %}

{% block content %}
    {{ block('meta') }}

    <h4>ID</h4>
    <p>{{ target.id|short_guid }}</p>

    <h4>Name</h4>
    <p>{{ target.name }}</p>

    <h4>Type</h4>
    <p>{{ target.formatType() }}</p>

    <h4>Credentials</h4>
    <p>
        {% if target.credential %}
            {{ target.credential.name }} ({{ target.credential.formatType() }})
        {% elseif target.isAWS() %}
            {{ macros.status('None', 'error', 'spam-2') }}
        {% else %}
            None
        {% endif %}
    </p>

    <h4>Script Context</h4>
    <p>
        <code>{{ target.parameter('context') ?: 'None' }}</code>
    </p>

    <h4>URL</h4>
    <p>
        {% if target.url %}
            <a href="{{ target.url }}">{{ target.url }}</a>
        {% else %}
            None
        {% endif %}
    </p>

    <hr>

    {% if target.type == 'rsync' %}
        {{ block('rsync_meta') }}

    {% elseif target.type == 'script' %}
        {{ block('script_meta') }}

    {% elseif target.type == 'eb' %}
        {{ block('eb_meta') }}

    {% elseif target.type == 's3' %}
        {{ block('s3_meta') }}

    {% elseif target.type == 'cd' %}
        {{ block('cd_meta') }}

    {% endif %}

    <p>
        {% if can_edit %}
            <a class="btn btn--action" href="{{ uriFor('target.edit', {'application': application.id, 'target': target.id}) }}">Edit Target</a></li>
        {% else %}
            {{ macros.disabled_button('Edit Target') }}
        {% endif %}

        {% if can_edit %}
            <a class="btn btn--destructive" href="{{ uriFor('target.remove', {'application': application.id, 'target': target.id}) }}">Remove Target</a></li>
        {% else %}
            {{ macros.disabled_button('Remove Target') }}
        {% endif %}
    </p>

{% endblock %}

{% block meta %}
    <ul class="meta-box">
        <li>
            <h6>Application</h6>
            {{ application.name }}
        </li>

        <li>
            <h6>Environment</h6>
            {{ target.environment.name }}
        </li>

        <li>
            <h6>Target Template</h6>
            {{ target.template ? target.template.name: 'None' }}
        </li>

        <li>
            <h6>Date Added</h6>
            {{ target.created|html5date }}
        </li>

        <li>
            <h6>What's currently deployed</h6>
            {% if target.lastJob %}
                {{ macros.job_status_prefix(target.lastJob, false, false) }}
                on
                {{ target.lastJob.created|html5date }}
                by
                {{ macros.user_display_link(target.lastJob.user) }}
            {% else %}
                Nothing!
            {% endif %}
        </li>

    </ul>
{% endblock %}

{% block rsync_meta %}
    <h4>Servers</h4>
    <p>
        <code>{{ target.parameter('servers') }}</code>
    </p>

    <h4>File path</h4>
    <p>
        <code>{{ target.parameter('path') }}</code>
    </p>
{% endblock %}

{% block script_meta %}

{% endblock %}

{% block cd_meta %}
    <h4>AWS Region</h4>
    <p>
        <code>{{ target.parameter('region') }}</code>
    </p>

    <h4>CodeDeploy Application Name</h4>
    <p>
        <code>{{ target.parameter('application') }}</code>
    </p>

    <h4>CodeDeploy Deployment Group</h4>
    <p>
        <code>{{ target.parameter('group') }}</code>
    </p>

    <h4>CodeDeploy Configuration</h4>
    <p>
        <code>{{ target.parameter('configuration') }}</code>
    </p>

    <h4>S3 Bucket</h4>
    <p>
        <code>{{ target.parameter('bucket') }}</code>
    </p>

    <h4>S3 File</h4>
    <p>
        <code>{{ target.parameter('path') ?: '$APPID/$PUSHID.zip' }}</code>
    </p>
{% endblock %}

{% block eb_meta %}
    <h4>AWS Region</h4>
    <p>
        <code>{{ target.parameter('region') }}</code>
    </p>

    <h4>Elastic Beanstalk Application Name</h4>
    <p>
        <code>{{ target.parameter('application') }}</code>
    </p>

    <h4>Elastic Beanstalk Environment</h4>
    <p>
        <code>{{ target.parameter('environment') }}</code>
    </p>

    <h4>S3 Bucket</h4>
    <p>
        <code>{{ target.parameter('bucket') }}</code>
    </p>

    <h4>S3 File</h4>
    <p>
        <code>{{ target.parameter('path') ?: '$APPID/$PUSHID.zip' }}</code>
    </p>
{% endblock %}

{% block s3_meta %}
    <h4>AWS Region</h4>
    <p>
        <code>{{ target.parameter('region') }}</code>
    </p>

    <h4>S3 Method</h4>
    <p>
        <code>{{ target.parameter('s3_method') }}</code>
    </p>

    <h4>S3 Bucket</h4>
    <p>
        <code>{{ target.parameter('bucket') }}</code>
    </p>

    <h4>S3 Source</h4>
    <p>
        <code>{{ target.parameter('source') ?: '.' }}</code>
    </p>

    <h4>S3 Destination</h4>
    <p>
        <code>{{ target.parameter('path') }}</code>
    </p>
{% endblock %}

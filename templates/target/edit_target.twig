{% extends 'base.twig' %}
{% import 'macros.form.twig' as form_macros %}

{% use 'target/partial.target_form.twig' %}

{% set page_title = 'Edit Target' %}

{% block breadcrumb_links %}
    <li><a href="{{ uriFor('applications') }}">Applications</a></li>
    <li><a href="{{ uriFor('application', {'application': application.id}) }}">{{ application.name }}</a></li>
    <li><a href="{{ uriFor('targets', {'application': application.id}) }}">Deployment Targets</a></li>
    <li><a href="{{ uriFor('target', {'application': application.id, 'target': target.id}) }}">{{ target.name}}</a></li>
{% endblock %}

{% block content %}
    {{ block('meta') }}

    {{ form_macros.form_errors(errors, is_csrf_error) }}

    <h4>Type</h4>
    <p>{{ target.formatType() }}</p>

    <form method="post">
        {{ form_macros.csrf_input('target.edit') }}

        <ul class="form-fields form-wrapper">
            <li>
                <label for="template">Template</label>
                {% if templates %}
                    <select class="select-input" name="template" id="template">
                        <option></option>
                        {% for template in templates %}
                            {% set is_selected = template.id == form.template ? ' selected' : '' %}
                            <option value="{{ template.id }}"{{ is_selected }}>{{ template.name }}</option>
                        {% endfor %}
                    </select>
                {% else %}
                   <p> No templates available for this environment.<p>
                {% endif %}
            </li>

            <li>
                {% set has_error = form_macros.has_error(errors, 'name') ? ' is-error' : '' %}
                <label for="name">Name</label>
                <input class="text-input{{ has_error }}" type="text" name="name" id="name" maxlength="80" value="{{ form.name }}" required>
            </li>

            <li>
                {% set has_error = form_macros.has_error(errors, 'url') ? ' is-error' : '' %}
                <label for="url">URL</label>
                <input class="text-input{{ has_error }}" type="url" name="url" id="url" maxlength="200" value="{{ form.url }}" placeholder="https://{{ selected_environment.name }}.example.com">
                <small><b>Optional.</b> Add a URL to help users find where the project is deployed.</small>
            </li>

            <li>
                {% set has_error = form_macros.has_error(errors, 'script_context') ? ' is-error' : '' %}
                <label for="script_context">Script Context</label>
                <input class="text-input{{ has_error }}" type="text" name="script_context" id="script_context" maxlength="100" value="{{ form.script_context }}">
                <small>
                    <b>Optional.</b> Pass extra context text or data to your scripts and commands in your <code>.hal9000.yml</code> configuration.
                    <b style="color:indianred">Do not use this for secrets!</b>
                </small>
            </li>
        </ul>

        <hr>

        <ul class="form-fields form-wrapper">

            {% if target.type in ['rsync'] %}
                {{ block('rsync_fields') }}
            {% endif %}

            {% if target.type in ['script'] %}
                {{ block('script_fields') }}
            {% endif %}

            {% if target.type in ['s3', 'cd', 'eb'] %}
                {{ block('aws_fields') }}
            {% endif %}

            {% if target.type in ['cd'] %}
                {{ block('codedeploy_fields') }}
            {% endif %}

            {% if target.type in ['eb'] %}
                {{ block('beanstalk_fields') }}
            {% endif %}

            {% if target.type in ['s3'] %}
                {{ block('s3_only_fields') }}
            {% endif %}

            {% if target.type in ['s3', 'cd', 'eb'] %}
                {{ block('s3_fields') }}
            {% endif %}

            <li data-type-specific data-s3 data-eb data-cd>
                {% set has_error = form_macros.has_error(errors, 'credential') ? ' is-error' : '' %}
                <label for="credential">Credentials</label>
                <select class="select-input{{ has_error }}" name="credential" id="credential">
                    <option></option>
                    {% for credential in credentials %}
                        {% set is_selected = form.credential == credential.id ? ' selected' : '' %}
                        <option value="{{ credential.id }}"{{ is_selected }}>{{ credential.name }} ({{ credential.formatType() }})</option>
                    {% endfor %}
                </select>
                <small>
                    Credentials are required for AWS-based deployments.
                </small>
            </li>
        </ul>

        <p>
            <button type="submit" class="btn btn--action">Save Changes</button>
            <a href="{{ uriFor('target', {'application': application.id, 'target': target.id}) }}">Cancel</a>
        </p>

    </form>

{% endblock %}

{% block meta %}
    <ul class="meta-box">
        <li>
            <h6>Application</h6>
            {{ application.name }}
        </li>

        <li>
            <h6>Environment</h6>
            {{ target.environment.name }}
        </li>
    </ul>
{% endblock %}

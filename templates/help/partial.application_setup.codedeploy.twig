<p>
    AWS CodeDeploy coordinates application deployments to Amazon EC2 instances, on-premises instances, or both.
</p>
<p>
    AWS CodeDeploy works with various configuration management systems, continuous integration and deployment systems, and source control systems.
    It is similar to Elastic Beanstalk, but provides more control over server instances and technology.
</p>

<ol class="list--bullet">
    <li>
        <b>Request servers from your Platform Engineering team.</b>
        <p>
            All AWS resources are built through Puppet. Complete provisioning instructions must be created to build your servers in AWS.
            <br><small>Please have patience, this process can take a significant amount of time.</small>
        </p>
    </li>
    <li>
        <b>CodeDeploy agent must be installed on all servers.</b>
        <p>
            All AWS resources are built through Puppet. Complete provisioning instructions must be created to build your servers in AWS.
            <br><small>Please have patience, this process can take a significant amount of time.</small>
        </p>
    </li>
    <li>
        <b>Have Platform Engineering create a CodeDeploy Application and S3 bucket.</b>
        <p>
            Your application is compiled into a tarball and uploaded to S3. The CodeDeploy agents then pull the archive from the S3 bucket and deploy it to the server.
        </p>
    </li>

    <li>
        <b>CodeDeploy agent must be installed on all servers.</b>
        <p>
            All AWS resources are built through Puppet. Complete provisioning instructions must be created to build your servers in AWS.
            <br><small>Please have patience, this process can take a significant amount of time.</small>
        </p>
    </li>

    <li>
        <b>Create AWS access token with correct permissions.</b>
        <p class="mvn">This can be shared between multiple applications, but the token must have the following permissions:</p>
        <ul class="list--bare">
            <li><code>s3:GetObject</code></li>
            <li><code>s3:ListAllMyBuckets</code></li>
            <li><code>s3:ListBucket</code></li>
            <li><code>s3:PutObject</code></li>
            <li><code>codedeploy:CreateDeployment</code></li>
            <li><code>codedeploy:CreateDeployment</code></li>
            <li><code>codedeploy:ListDeployments</code></li>
        </ul>

        <p>
            <small>Please note: S3 permissions must be for the bucket resource and contents (<code>bucket</code> and <code>bucket/*</code>)</small>
        </p>
    </li>

    <li>
        <b>Configure deployments with appspec.yml</b>
        <p class="mtm mbn">
            You must configure your deployment procedure with an appspec file.
            This informs the agents where to put your code.
        </p>
        {{ block('setup_codedeploy_appspec') }}

        <p class="mtm mbn">If you need to customize permissions, you can add a block for that:</p>
        {{ block('setup_codedeploy_appspec_perm') }}

        <p class="mtm mbn">If you need to run a command on the server, this is also supported:</p>
        {{ block('setup_codedeploy_appspec_command') }}
    </li>
</ol>

<h6>Other references:</h6>
<ul class="list--bare">
    <li class="mvn"><a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/welcome.html">What is AWS CodeDeploy?</a></li>
    <li class="mvn"><a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/app-spec-ref.html">AWS CodeDeploy AppSpec File Reference</a></li>
    <li class="mvn"><a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-add-appspec-file.html">Add an AppSpec File to a Revision for AWS CodeDeploy</a></li>
    <li class="mvn"><a href="http://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-run-agent-install.html">Install or Reinstall the AWS CodeDeploy Agent</a></li>
</ul>

<small>
    Once this process is finished you should have the following information:
    <b>CD Application</b>,
    <b>S3 bucket</b>,
    <b>Deployment Group</b>,
    <b>Deployment Configuration</b>,
    and <b>AWS Access Token</b>.
</small>

{% block setup_codedeploy_appspec %}
    {% spaceless %}
        <pre>version: 0.0
os: linux
files:
    - source: /
      destination: /var/www/testapplication</pre>
    {% endspaceless %}
{% endblock %}

{% block setup_codedeploy_appspec_perm %}
    {% spaceless %}
        <pre>permissions:
  - object: /var/www/testapplication
    pattern: "**"
    owner: ux-ecsvc
    group: ux-ecsvc
    type:
      - file
      - directory</pre>
    {% endspaceless %}
{% endblock %}

{% block setup_codedeploy_appspec_command %}
    {% spaceless %}
        <pre>hooks:
  Install:
    - location: /var/www/application/bin/myscript.sh
      timeout: 30 (timeout in seconds, optional)
      runas: user_to_run_command_as (optional)</pre>
    {% endspaceless %}
{% endblock %}

{% extends 'base.html.twig' %}
{% import "_partial/macros.twig" as macros %}

{% set page_title = 'Help' %}

{% set kmContact = '<a href="mailto:KeymastersAppEngineers@quickenloans.com">KeymastersAppEngineers@quickenloans.com</a>' %}
{% set wcContact = '<a href="mailto:ITTeamWebCore@quickenloans.com">ITTeamWebCore@quickenloans.com</a>' %}

{% block content %}
    <h1>Help &amp; FAQ</h1>

    <ul class="list--bare">
        <li class="trailer">
            <a href="#help-support"><h4>Support</h4></a>
            <ul class="list--bullet">
                <li><a href="#permission">Who should I contact for support or permission changes?</a></li>
                <li><a href="#bugs">Who should I contact regarding bugs or feature requests?</a></li>
                <li><a href="{{ urlFor('help.githubpermissions') }}">I'm a Github repository collaborator but am unable to build or push. Help!</a></li>
            </ul>
        </li>

        <li class="trailer">
            <a href="#help-setup"><h4>Application Setup</h4></a>
            <ul class="list--bullet">
                <li><a href="#add-application">How do I add my application to HAL?</a></li>
                <li><a href="#deploy-application">How do I deploy my application with HAL?</a></li>
                <li><a href="#application-deployment">How do I use a script to build or push my application?</a></li>
                <li><a href="#dotnet-support">Does HAL support .NET applications?</a></li>
                <li><a href="#aws-support">Does HAL support AWS?</a></li>
                <li><a href="#docker-support">Does HAL support Docker?</a></li>
                <li><a href="#encrypted-configuration">Does HAL support encrypted configuration?</a></li>
                <li><a href="#app-dependencies">My application needs a specific library or software installed to build. What do I do?</a></li>
                <li><a href="{{ urlFor('help.deployment') }}">Deployment scripting guide for engineers</a></li>
            </ul>
        </li>

        <li>
            <a href="#help-misc"><h4>Other</h4></a>
            <ul class="list--bullet">
                <li><a href="#api">Does HAL have an API? Is there any documentation?</a></li>
                <li><a href="#maintenance">When is HAL 9000 updated? When does maintenance occur?</a></li>
                <li><a href="#release-notes">Release Notes</a></li>
            </ul>
        </li>
    </ul>

    <h2 id="help-support">Support</h2>
    {{ block('support_questions') }}

    <h2 id="help-setup">Application Setup</h2>
    {{ block('setup_questions') }}

    <h2 id="help-misc">Other</h2>
    {{ block('other_questions') }}

{% endblock %}

{% block support_questions %}
    <h3 id="permission">{{ macros.status_icon('Who should I contact for support or permission changes?') }}</h3>

    <p>You should email <strong>Team Key Masters</strong> at {{ kmContact|raw }}.</p>

    <h6 class="mbn"><strong>How are permissions determined?</strong></h6>
    <p>
        HAL grants non-prod build and push permissions to engineers that are <b>public</b> members of the Github organization that owns the project.
    </p>
    <p>
        For non-engineers, users must be given access by an Administrator to build or deploy applications.
    </p>

    <p>
        <b>Leads</b> of applications have access to a few more options such as Encrypted Properties, Deployment Targets, Kraken Schema, and more. Contact
        an administrator if you think you may need this level of access.
    </p>

    {{ macros.alert('info', 'The way HAL determines Github permissions has recently changed.', block('github_permission_changes')) }}


    <h3 id="bugs">{{ macros.status_icon('Who should I contact regarding bugs or feature requests?') }}</h3>
    <p>
        HAL 9000 is developed and maintained by the Web Core team. To report bugs or request a new features, please
        submit an issue in the Github repository at <a href="http://git/web-core/hal/issues">http://git/web-core/hal</a>.
    </p>

    <p>For general questions or critical errors, you can contact Web Core through the following methods:</p>
    <ul class="list--bullet">
        <li><strong><a href="hipchat://www.hipchat.com/room/1036795">[Team] Web Core</strong></a> (Hipchat)</li>
        <li>{{ wcContact|raw }} (email)</li>
    </ul>
{% endblock %}

{% block setup_questions %}
    <h3 id="add-application">{{ macros.status_icon('How do I add my application to HAL?') }}</h3>
    <p>
        Any project can be added to HAL 9000. Doing so will allow you to create builds in the standard HAL environment. However, to deploy to servers please see <a href="#deploy-application">deployment instructions</a>.
    </p>
    <ol class="list--bullet">
        <li>
            <strong>Projects belong to groups. Determine what group your application should be part of, or create a new group.</strong>
            <p>
                Projects are often grouped by team or business area. You can see the ones that already exist by viewing the <a href="{{ urlFor('applications') }}">Applications page</a>.
            </p>
        </li>
        <li>
            <strong>Project code must be hosted on GitHub and belong to an organization</strong>
            <p>
                The project code must be hosted on the internal <a href="http://git">GitHub Enterprise</a> server. Only applications belonging to a GitHub organization may be used.
            </p>
        </li>
        <li>
            <strong>Add a <code>.hal9000.yml</code> configuration file to your project.</strong>
            <p>
                The hal9000 configuration file is used to tell HAL how to build and deploy your application.
                Please see <a href="{{ urlFor('help.deployment') }}">deployment scripting guide</a> for full details.
            </p>
        </li>
        <li>
            <strong>Determine who should be able to build and push your application.</strong>
            <p>
                By default, HAL 9000 will grant build &amp; push permissions for non-production environments to all
                users who are members of the GitHub organization that owns the project repository.</p>
            </p>
            <p>If non-engineers need to be able to build and deploy, you will need to request access from an administrator.</p>
        </li>
    </ol>

    <h3 id="deploy-application">{{ macros.status_icon('How do I deploy my application with HAL?') }}</h3>
    <p>
        Once a project has been added to HAL 9000, servers must be added and assigned to start deployments.
    </p>

    <p>You will need help from the <strong>unix team</strong> during this process.</p>

    <ol class="list--bullet">
        <li>
            <strong>What environments and servers will your application be deployed to?</strong>
            <p>Examples: <code>test1www1</code>, <code>dev1iweb</code>, <code>prod1srvwww1</code></p>
        </li>
        <li>
            <strong>Where on those servers will your application be hosted?</strong>
            <p>
                This should be the full path to the directory that code is pushed to.
                <br>Example: <code>/var/www/application</code>
            </p>
        </li>
        <li>
            <strong>Determine the URL for each environment or server.</strong>
            <p>
                When a server is added for your application to deploy to, you'll also need to add the URL where the service or site is available from.
                <br>Examples: <code>http://test.application.com</code>, <code>http://test1w1.application.com</code>
            </p>
        </li>
        <li>
            <strong>Make sure permissions are correct on each server.</strong>
            <p>
                For HAL to be able to push code to these servers, the user <code>codexfer</code> must have access to each server.
                In addition, the directory to be deployed to must be owned by <code>codexfer</code> and typically belong to the <code>apache</code> or <code>nginx</code> groups.
            </p>
        </li>
    </ol>

    <h6 class="mbn">
        <strong>Example data</strong>
    </h6>

    <pre>
dir: /var/www/application
test
    test1www1           http://test1w1.application.com
    test2www1           http://test1w2.application.com
beta
    beta1www1           http://beta.application.com
    beta2www1           http://beta.application.com</pre>

    <p>
        Once you have gathered all of the required information, Contact the Key Masters at {{ kmContact|raw }} to request that the deployment information be added to HAL 9000.
    </p>

    <h3 id="application-deployment">{{ macros.status_icon('How do I use a script to build or push my application?') }}</h3>
    <p>
        System commands can be used to customize the build and/or push process for an application.
    </p>

    <p>Read more in the <a href="{{ urlFor('help.deployment') }}">deployment scripting guide for engineers</a>.</p>

    <h3 id="dotnet-support">{{ macros.status_icon('Does HAL support .NET applications?') }}</h3>
    <p>HAL 9000 supports building windows projects and deploying to AWS-based deployment targets such as Elastic Beanstalk, CodeDeploy, and EC2.</p>
    <p>However, this feature will not be enabled.</p>

    <h3 id="aws-support">{{ macros.status_icon('Does HAL support AWS?') }}</h3>
    <p>HAL 9000 supports the following deployment strategies:</p>
    <ul class="list--bullet">
        <li><a href="https://aws.amazon.com/elasticbeanstalk/">AWS Elastic Beanstalk</a></li>
        <li><a href="https://aws.amazon.com/codedeploy/">AWS CodeDeploy</a></li>
        <li><a href="https://aws.amazon.com/s3/">AWS S3</a> (Static file deployments)</li>
        <li><a href="https://aws.amazon.com/autoscaling/">AWS EC2</a> (EC2 Autoscaling Pools)</li>
        <li>R Sync (On-premise unix servers)</li>
    </ul>

    <h3 id="docker-support">{{ macros.status_icon('Does HAL support Docker?') }}</h3>
    <p>All unix-based applications are built in isolated Docker containers.</p>
    <p>
        This ensures reproducible builds by having a fresh container with consistent system configuration for every build.
        Applications can even use a custom, dedicated container if needed.
    </p>
    <p>Read more in the <a href="{{ urlFor('help.deployment') }}">deployment scripting guide for engineers</a>.</p>

    <h3 id="encrypted-configuration">{{ macros.status_icon('Does HAL support encrypted configuration?') }}</h3>
    <p>
        <strong>Yes.</strong><br>
        HAL 9000 can store sensitive information such as passwords or API keys. This data is encrypted when it is store in the database, and only decrypted during the build process.
    </p>
    <p>
        Administrators and Project Leads can add encrypted properties from the Application page. Values can be stored for individual environments, or globally so they can be used in every environment.
    </p>
    <p>See in the <a href="{{ urlFor('help.deployment') }}">deployment scripting guide for engineers</a> for more details on how to read these values when they are decrypted during the build process.</p>

    <h3 id="app-dependencies">{{ macros.status_icon('My application needs a specific library or software installed to build. What do I do?') }}</h3>
    <p>
        HAL builds within docker containers. Docker allows us to have completely isolated, custom build environments for any application that needs it.
    </p>
    <p>
        <strong>Do not contact the UNIX team about installing software on the HAL 9000 servers, it will not help your application.</strong><br>
    </p>
    <p>
        To enable a library, it must be installed either by your build scripts directly, or in a docker image.
        Please see <a href="http://git/skluck/docker-images">skluck/docker-images</a>{{ macros.icon('github') }} for currently available containers.
    </p>
{% endblock %}

{% block other_questions %}
    <h3 id="api">{{ macros.status_icon('Does HAL have an API? Is there any documentation?') }}</h3>
    <p>There is a read-only hypermedia REST API here: <a href="{{ urlFor('api.index') }}">/api</a></p>
    <p>However, there is no api documentation at this time.</p>

    <h3 id="maintenance">{{ macros.status_icon('When is HAL 9000 updated? When does maintenance occur?') }}</h3>
    <p>
        New releases of HAL 9000 are deployed on <b>Fridays</b>. Typically this occurs before 9 AM, and time is blocked off for 1 hour.
        The site may or may not be sent into maintenance mode, which disables the frontend.
    </p>
    <p>Higher risk deployments that contain larger changes or complex database migrations are performed at <b>night after 7 PM</b>.</p>
    <p>
        Hotfixes or critical bugfixes <b>may</b> be deployed on other days, however this is very rare.
        For these fixes we deploy either during lunchtime, or after business (5 PM or later).
    </p>

    <h3 id="release-notes">{{ macros.status_icon('Release Notes') }}</h3>
    {% include '_partial/help.release-notes.twig' %}
{% endblock %}

{% block github_permission_changes %}
With Github Enterprise 2.1, features that HAL relied on to determine engineer permissions were removed.

Previously, HAL could check whether users were repository collaborators, but must now check if users are <b>public</b>
members of the organization that owns the repository.

Please see <a href="{{ urlFor('help.githubpermissions') }}">these instructions </a> for how to make your github organizational status public.
{% endblock %}

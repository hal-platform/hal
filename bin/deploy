#!/usr/bin/env bash

# functions
function loadTitles() {
    read -r -d '' TITLE_ENCRYPTED <<OUTOUT
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ VERIFY ENCRYPTED PROPERTIES                                                  ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
OUTOUT
    read -r -d '' TITLE_CONFIG <<OUTOUT
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ NORMALIZE ENVIRONMENT CONFIGURATION                                          ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
OUTOUT
    read -r -d '' TITLE_DUMP <<OUTOUT
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ CACHING DI CONTAINER                                                         ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
OUTOUT
    read -r -d '' TITLE_TWIG <<OUTOUT
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ CACHING TWIG TEMPLATES                                                       ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
OUTOUT
    read -r -d '' TITLE_DOCTRINE <<OUTOUT
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ CACHING DOCTRINE PROXIES                                                     ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
OUTOUT
    read -r -d '' TITLE_YARN <<OUTOUT
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ INSTALLING YARN AND NODE DEPENDENCIES                                        ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
OUTOUT
    read -r -d '' TITLE_GULP <<OUTOUT
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ RUNNING GULP DEPLOY                                                          ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
OUTOUT
    read -r -d '' TITLE_CLEANUP <<OUTOUT
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ CLEAN UP                                                                     ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
OUTOUT
}

function removeArtifacts() {
    DELFILES=$@

    # Remove files
    for i in ${DELFILES[@]}
    do
        FILE="$DIR/../$i"
        EXISTS=$(test -e $FILE && echo 1 || echo 0)
        if [[ $EXISTS -eq "1" ]]; then
            echo "Removing $FILE"
            rm -rf "$FILE"
        fi

    done
}

# setup

DIR=$( cd "$( dirname "$0" )" && pwd )
loadTitles

BACKEND=true
FRONTEND=true
DEPLOY=false

set -e

# run

# determine whether to run frontend or backend only install
for var in "$@" ; do
    if [ "$var" = "--frontend" ] ; then
        FRONTEND=true
        BACKEND=false
    elif [ "$var" = "--backend" ] ; then
        FRONTEND=false
        BACKEND=true
    elif [ "$var" = "--deploy" ] ; then
        DEPLOY=true
    fi
done

# run backend install
if [ "$BACKEND" = true ] ; then
    # install and configure
    echo "$TITLE_ENCRYPTED"
    "$DIR"/verify-encrypted

    # Generate and export a new encryption secret
    export HAL_ENCRYPTION_SECRET=$("$DIR/generate-trp-secret")

    echo "$TITLE_CONFIG"
    "$DIR"/normalize-configuration

    echo "$TITLE_TWIG"
    "$DIR/"compile-templates

    echo "$TITLE_DUMP"
    "$DIR"/dump-di

    echo "$TITLE_DOCTRINE"
    "$DIR"/generate-doctrine-proxies

    if [ "$DEPLOY" = true ] ; then
        echo "$TITLE_CLEANUP"
        removeArtifacts "bin/composer" "testing"
    fi
fi

# run frontend install
if [ "$FRONTEND" = true ] ; then
    echo "$TITLE_GULP"
    yarn run deploy

    if [ "$DEPLOY" = true ] ; then
        echo "$TITLE_CLEANUP"
        removeArtifacts "node_modules" "js" "sass"
    fi
fi

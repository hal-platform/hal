#!/usr/bin/env php
<?php

namespace QL\Hal\Bin;

use Symfony\Component\Yaml\Yaml;

// Generate a random session encryption secret, overwrites the current value if it exists
// removed comments and formatting, so prod only probably

$root = __DIR__ . '/../';
$file = $root . 'app/config.env.yml';
$key = 'encryption.secret';

echo "Generate a random session encryption secret...\n";

if (!$container = @include $root . '/app/bootstrap.php') {
    echo "An error occured while attempting to dump the DI Container.\n";
    exit(1);
};

if (!($contents = file_get_contents($file))) {
    echo sprintf("Unable to read environment configuration file %s. Does it exists?\n", $file);
    exit(1);
}

$data = Yaml::parse($contents);
$data['parameters'][$key] = random(96);

if (!file_put_contents($file, Yaml::dump($data))) {
    echo sprintf("Unable to write to environment configuration file %s. Is it writable?\n", $file);
    exit(1);
}

echo "Successfully generated a session encryption secret.\n";

/**
 * Generate a random encryption secret
 *
 * @param int $length
 * @return string
 */
function random($length = 96)
{
    $out = '';

    while (strlen($out) < $length) {
        $out .= bin2hex(chr(rand(0, 255)));
    }

    return substr($out, 0, 96);
}
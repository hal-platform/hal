#!/usr/bin/env php
<?php
/**
 * @copyright Â©2015 Quicken Loans Inc. All rights reserved. Trade Secret,
 *    Confidential and Proprietary. Any dissemination outside of Quicken Loans
 *    is strictly prohibited.
 */

namespace QL\Hal\Bin;

use QL\Panthor\Bootstrap\Di;
use Slim\Environment;
use Symfony\Component\Finder\Finder;

$root = __DIR__ . '/..';
require_once $root . '/vendor/autoload.php';

// Before the container is compiled, switch out the doctrine driver to fake sqlite.
$di = Di::getDi($root, 'Who\Cares', function($container) use ($root) {
    $container->setParameter('doctrine.connection', ['driver' => 'pdo_sqlite', 'memory' => true]);
});

// start slim to prime twig extension and inject synthetic services
Environment::mock(['PATH_INFO' => '/derpderp']);
$slim = $di->get('slim');
$slim->call();

$twig = $di->get('twig.environment');
$twigDir = $di->get('twig.template.dir');
$twigCacheDir = $di->get('twig.cache.dir');

// find and attempt to load the templates
$files = (new Finder)
    ->files()
    ->name('*.twig')
    ->in($twigDir);

echo <<<OUTPUT

Compiling twig templates
Source: $twigDir
Target: $twigCacheDir


OUTPUT;

if (!$files) {
    echo "No templates found.\n";
    exit(0);
}

// Always create twig cache if not found
if (!file_exists($twigCacheDir)) {
    mkdir($twigCacheDir);
}

echo "Templates:\n";

foreach ($files as $file) {
    echo $file->getRelativePathname() . "\n";
    $template = $twig->loadTemplate($file->getRelativePathname());
    $template->render([]);
}

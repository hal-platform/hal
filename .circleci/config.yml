# https://circleci.com/docs/2.0/language-php/
# https://circleci.com/docs/2.0/circleci-images/
version: 2

defaults: &defaults
    working_directory: '~/project'
    docker:
        - image: 'halplatform/php:latest'

frontend_defaults: &frontend_defaults
    working_directory: '~/project'
    docker:
        - image: 'halplatform/hal-build-environments:node8.6-centos7'

attach_workspace: &attach_workspace
    attach_workspace:
        at: '.'

workflows:

    version: 2

    pipeline:
        jobs:
            - fetch_code
            - install_php_dependencies:
                requires: [ fetch_code ]

            - unit_tests:
                requires: [ install_php_dependencies ]
            - static_analysis:
                requires: [ install_php_dependencies ]
            - linting:
                requires: [ install_php_dependencies ]

            - install_npm_dependencies:
                requires: [ fetch_code ]
            - frontend_linting:
                requires: [ install_npm_dependencies ]
            - frontend_build:
                requires: [ install_npm_dependencies ]

            - security_tests:
                requires: [ unit_tests, frontend_build ]

jobs:
    fetch_code:
        <<: *defaults
        steps:
            - checkout
            - persist_to_workspace:
                root: '.'
                paths: [ '.' ]

    install_php_dependencies:
        <<: *defaults
        steps:
            - *attach_workspace

            - restore_cache:
                keys: [ 'v1-php-deps-{{ checksum "composer.lock" }}', 'v1-php-deps' ]

            - run:
                name: 'Install PHP dependencies'
                command: |
                    composer --no-interaction --no-progress install
                    composer show

            - save_cache:
                key: 'v1-php-deps-{{ checksum "composer.lock" }}'
                paths: [ 'vendor' ]

            - persist_to_workspace:
                root: '.'
                paths: [ 'vendor' ]

    install_npm_dependencies:
        <<: *frontend_defaults
        steps:
            - *attach_workspace

            - restore_cache:
                keys: [ 'v1-npm-deps-{{ checksum "yarn.lock" }}', 'v1-npm-deps-' ]

            - run:
                name: 'Install node dependencies'
                command: 'yarn install'

            - save_cache:
                key: 'v1-npm-deps-{{ checksum "yarn.lock" }}'
                paths: [ './node_modules' ]

            - persist_to_workspace:
                root: '.'
                paths: [ 'node_modules' ]

    unit_tests:
        <<: *defaults
        steps:
            - *attach_workspace
            - run:
                name: 'Run unit tests'
                command: |
                    phpdbg -qrr \
                    vendor/bin/phpunit
            - store_test_results:
                path: '.phpunit/report'

            - run:
                name: 'Check test coverage threshold'
                command: |
                    coverage_threshold=${MINIMUM_TEST_COVERAGE_PERCENT-50}
                    bin/cicd/check-test-coverage ${coverage_threshold}

    static_analysis:
        <<: *defaults
        steps:
            - *attach_workspace
            - run:
                name: 'Run static analysis'
                command: 'php -d memory_limit=-1 vendor/bin/phpstan analyse --configuration=phpstan.neon -l 4 src'

    linting:
        <<: *defaults
        steps:
            - *attach_workspace

            - run:
                name: 'Run syntax check'
                command: 'composer run-script lint'

            - run:
                name: 'Run code formatting check'
                command: 'composer run-script sniff'

    security_tests:
        <<: *frontend_defaults
        steps:
            - *attach_workspace

            - run:
                name: 'Install Snyk CLI'
                command: 'yarn global add snyk'

            - run:
                name: 'Run snyk'
                command: |
                   $(yarn global bin)/snyk test
                   $(yarn global bin)/snyk monitor

    frontend_linting:
        <<: *frontend_defaults
        steps:
            - *attach_workspace
            - run:
                name: 'Run jslint and sasslint'
                command: |
                    yarn run lint:sass
                    yarn run lint:js

    frontend_build:
        <<: *frontend_defaults
        steps:
            - *attach_workspace
            - run:
                name: 'Run javascript and sass compile'
                command: 'yarn run build'

imports:
  - resource: di.pages.yml
  - resource: di.api.yml
  - resource: di.panthor.yml

services:

  ######################################################################################################################
  # RUN TIME INJECTED (SYNTHETIC) SERVICES
  ######################################################################################################################

  # Set by LoginBouncer
  currentUser:
    class: 'QL\Hal\Core\Entity\User'
    synthetic: true

  # Set by the API Auth Bouncer
  requester:
    synthetic: true

  ######################################################################################################################
  # DOCTRINE CONFIGURATION
  ######################################################################################################################

  doctrine.config:
    class: 'Doctrine\ORM\Configuration'
    factory_class: 'Doctrine\ORM\Tools\Setup'
    factory_method: 'createAnnotationMetadataConfiguration'
    arguments:
      - ['@doctrine.mapping']
      - %doctrine.devmode%
      - @doctrine.proxy.dir
      - @cache.doctrine

  doctrine.proxy.dir:
    class: 'NOTHING_TO_SEE_HERE'
    factory_service: 'directory.helper'
    factory_method: 'fullPath'
    arguments: ['.doctrine']

  doctrine.events:
    class: 'Doctrine\Common\EventManager'
    calls:
      - ['addEventListener', [['onFlush'], @doctrine.logger]]
      - ['addEventListener', [['prePersist'], @doctrine.persist.listener]]

  doctrine.logger:
    class: 'QL\Hal\Doctrine\EntityChangeLogger'
    arguments: [@user.helper]

  doctrine.persist.listener:
    class: 'QL\Hal\Core\Entity\Listener\EntityPersistListener'
    arguments: [@clock]

  ######################################################################################################################
  # APPLICATION
  ######################################################################################################################

  slim:
    parent: 'panthor.slim'
    arguments:
      - %slim.configuration%
    calls:
      - ['add', [@slim.session]]

  slim.hook.logger:
    class: 'QL\Hal\Slim\McpLoggerHook'
    arguments: [@logger.mcp.factory, @slim.environment, @slim.request]
  slim.hook.errors:
    class: 'QL\Hal\Slim\ErrorHandlerHook'
    arguments: [@exception.dispatcher, @logger, @error.pages.twig]

  slim.session:
    class: 'QL\Hal\Slim\SessionMiddleware'
    arguments: [@session.handler, @service_container]

  ######################################################################################################################
  # ERROR & EXCEPTION HANDLING
  ######################################################################################################################

  exception.dispatcher:
    class: 'QL\ExceptionToolkit\ExceptionDispatcher'


  ######################################################################################################################
  # CACHING
  ######################################################################################################################

  cache:
    class: 'MCP\Cache\PredisCache'
    arguments: [@redis]

  cache.github:
    class: 'QL\Hal\Github\MCPCache'
    arguments: [@cache]

  cache.doctrine:
    class: 'QL\Hal\Doctrine\PredisCache'
    arguments: [@redis, %cache.doctrine.ttl%]

  ######################################################################################################################
  # HELPERS
  ######################################################################################################################

  url.helper:
    class: 'QL\Hal\Helpers\UrlHelper'
    arguments:
      - @slim.request
      - @slim.response
      - @slim.router
      - @github

  directory.helper:
    class: 'QL\Hal\Helpers\DirectoryHelper'
    arguments: [@root]

  user.helper:
    class: 'QL\Hal\Helpers\LazyUserHelper'
    arguments: [@service_container]

  api.helper:
    class: 'QL\Hal\Helpers\ApiHelper'
    arguments: [@url.helper, @slim.request, %api.cachetimes%]
    calls:
      - ['setCache', [@cache]]

  time.helper:
    class: 'QL\Hal\Helpers\TimeHelper'

  unique.helper:
    class: 'QL\Hal\Helpers\UniqueHelper'
    arguments: [%application.major.version%, %unique.alphabet%]

  name.helper:
    class: 'QL\Hal\Helpers\NameHelper'

  ######################################################################################################################
  # TWIG STUFF
  ######################################################################################################################

  # Twig Extensions
  twig.extension.hal:
    class: 'QL\Hal\Twig\HalExtension'
    arguments:
      - @slim.request
      - @slim.cookies
      - @url.helper
      - @time.helper
      - @name.helper
      - @session
      - %application.title%
      - %application.sha%
      - %navigation.list%

  twig.extension.permissions:
    class: 'QL\Hal\Twig\PermissionExtension'
    arguments: [@permissions]

  twig.extension.github:
    class: 'QL\Hal\Twig\GithubExtension'
    arguments: [@url.helper, @github]

  # Twig Environment
  twig.environment:
    parent: 'panthor.twig.environment'
    calls:
      - ['addExtension', [@twig.extension.hal]]
      - ['addExtension', [@twig.extension.permissions]]
      - ['addExtension', [@twig.extension.github]]

  # The primary twig template. All other twig services should use this service as a parent
  twig.template.old:
    class: 'Twig_Template'
    factory_service: 'twig.environment'
    factory_method: 'loadTemplate'

  ######################################################################################################################
  # MIDDLEWARE
  ######################################################################################################################

  # Bounce unauthenticated users
  login.bouncer:
    class: 'QL\Hal\Bouncers\LoginBouncer'
    arguments:
      - @session
      - @service_container
      - @url.helper

  # Bounce non-admins
  admin.bouncer:
    class: 'QL\Hal\Bouncers\AdminBouncer'
    arguments:
      - @session
      - @permissions
      - @denied.twig
      - @login.bouncer

  # Bounce unauthenticated api clients
  api.auth.bouncer:
    class: 'QL\Hal\Bouncers\ApiAuthBouncer'
    arguments:
      - @service_container
      - @ldapService
      - @token.repo

  cachedApi.middleware:
    class: 'QL\Hal\Middleware\CachedApiMiddleware'
    arguments: [@api.helper]

  ######################################################################################################################
  # NON-DATABASE SERVICES
  ######################################################################################################################

  ldapTransport:
    class: 'Zend\Ldap\Ldap'
    arguments:
      -
        host: %ldap.host%
        baseDn: %ldap.baseDn%
        accountDomainNameShort: %ldap.domain%

  ldapService:
    class: 'MCP\Corp\Account\QLAdService'
    arguments: [@ldapTransport]
    calls:
      - ['authenticate', [%ldap.username%, %ldap.password%, false]]

  permissions:
    class: 'QL\Hal\Services\PermissionsService'
    arguments:
      - @ldapService
      - @deployment.repo
      - @repository.repo
      - @user.repo
      - @environment.repo
      - @github
      - '%debug.godmode%'
    calls:
      - ['setCache', [@cache]]
      - ['setCacheTTL', [%cache.permissions.ttl%]]

  redis:
    class: 'Predis\Client'
    arguments:
      - %redis.server%
      - {prefix: '%redis.prefix%:'}

  ######################################################################################################################
  # API Helpers
  ######################################################################################################################

  api.build.normalizer:
    class: 'QL\Hal\Api\BuildNormalizer'
    arguments:
        - @api.helper
        - @url.helper
        - @time.helper
        - @api.environment.normalizer
        - @api.repository.normalizer
        - @api.user.normalizer

  api.push.normalizer:
    class: 'QL\Hal\Api\PushNormalizer'
    arguments:
        - @api.helper
        - @url.helper
        - @time.helper
        - @api.build.normalizer
        - @api.deployment.normalizer
        - @api.user.normalizer

  api.deployment.normalizer:
    class: 'QL\Hal\Api\DeploymentNormalizer'
    arguments:
        - @api.helper
        - @api.repository.normalizer
        - @api.server.normalizer

  api.environment.normalizer:
    class: 'QL\Hal\Api\EnvironmentNormalizer'
    arguments: [@api.helper, @url.helper]

  api.group.normalizer:
    class: 'QL\Hal\Api\GroupNormalizer'
    arguments: [@api.helper, @url.helper]

  api.repository.normalizer:
    class: 'QL\Hal\Api\RepositoryNormalizer'
    arguments:
        - @api.helper
        - @url.helper
        - @api.group.normalizer

  api.server.normalizer:
    class: 'QL\Hal\Api\ServerNormalizer'
    arguments:
        - @api.helper
        - @url.helper
        - @api.environment.normalizer

  api.user.normalizer:
    class: 'QL\Hal\Api\UserNormalizer'
    arguments: [@api.helper, @url.helper]

  ######################################################################################################################
  # Github API
  ######################################################################################################################

  github:
    class: 'QL\Hal\Services\GithubService'
    arguments:
      - @github.userService
      - @github.repoService
      - @github.refService
      - @github.pullService
      - @github.commitService
      - @github.pager
      - @github.commitRepo

  github.client:
    class: 'Github\Client'
    arguments: [@github.http.client]

  github.http.client:
    class: 'QL\Hal\Github\CachedHttpClient'
    arguments:
      - {base_url: %github.baseurl%}
    calls:
      - ['authenticate', [%github.token%, null, 'http_token']]
      - ['setCache', [@cache.github]]

  github.pager:
    class: 'Github\ResultPager'
    arguments: [@github.client]

  github.orgService:
    class: 'Github\Api\Organization'
    arguments: [@github.client]

  github.pullService:
    class: 'Github\Api\PullRequest'
    arguments: [@github.client]

  github.refService:
    class: 'Github\Api\GitData\References'
    arguments: [@github.client]

  github.commitService:
    class: 'Github\Api\GitData\Commits'
    arguments: [@github.client]

  github.repoService:
    class: 'Github\Api\Repo'
    arguments: [@github.client]

  github.userService:
    class: 'Github\Api\User'
    arguments: [@github.client]

  github.commitRepo:
    class: 'Github\Api\Repository\Commits'
    arguments: [@github.client]

  ######################################################################################################################
  # SESSION
  ######################################################################################################################

  session:
    class: 'QL\Hal\Session'
    factory_service: 'session.handler'
    factory_method: 'load'

  session.handler:
    class: 'QL\Hal\SessionHandler'
    arguments: [@slim.cookies, %session.cookie.configuration%]

  ######################################################################################################################
  # Logging
  ######################################################################################################################

  logger:
    class: 'MCP\Service\Logger\Logger'
    arguments: [@logger.mcp.service, @logger.mcp.factory]

  logger.mcp.service:
    class: 'MCP\Service\Logger\Service\GuzzleService'
    arguments: [@logger.mcp.guzzle, @logger.mcp.renderer, true]
  logger.mcp.guzzle:
    class: 'Guzzle\Http\Client'
    arguments: [%logger.mcp.host%]
  logger.mcp.renderer:
    class: 'MCP\Service\Logger\Renderer\XmlRenderer'
    arguments: [@logger.mcp.writer]
  logger.mcp.writer:
    class: 'XMLWriter'

  logger.mcp.factory:
    class: 'MCP\Service\Logger\Adapter\Psr\MessageFactory'
    arguments: ['@clock']
    calls:
      - ['setDefaultProperty', ['applicationId', %application.id%]]
      # replaced at runtime, maybe
      - ['setDefaultProperty', ['machineIPAddress', @logger.mcp.serverIp]]
      # replaced at runtime
      - ['setDefaultProperty', ['machineName', 'localhost']]
  logger.mcp.serverIp:
    class: 'MCP\DataType\IPv4Address'
    factory_class: 'MCP\DataType\IPv4Address'
    factory_method: 'create'
    arguments: ['0.0.0.0']

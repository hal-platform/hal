imports:
  -
    resource: pages.yml

parameters:
    # environment independent parameters
    slim.hooks:
        slim.before:
            - 'slim.hook.logger'
            - 'slim.hook.errors'
            - 'slim.hook.twig'
        slim.before.router:
            - 'slim.hook.routes'
    applicationId: '200947'

services:

  ######################################################################################################################
  # RUN TIME INJECTED (SYNTHETIC) SERVICES
  ######################################################################################################################

  # This is set by LoginBouncer
  user:
    class: 'MCP\Corp\Account\User'
    synthetic: true

  service_container:
    class: 'Symfony\Component\DependencyInjection\ContainerInterface'
    synthetic: true

  ######################################################################################################################
  # APPLICATION
  ######################################################################################################################

  slim:
    class: 'Slim\Slim'
    arguments:
      - debug: '%debug%'
      - log.writer: '@slim.logger'
    configurator: ['@slim.configurator', 'configure']

  slim.environment:
    class: 'Slim\Environment'
    factory_service: 'slim'
    factory_method: 'environment'
  slim.request:
    class: 'Slim\Http\Request'
    factory_service: 'slim'
    factory_method: 'request'
  slim.response:
    class: 'Slim\Http\Response'
    factory_service: 'slim'
    factory_method: 'response'
  slim.router:
    class: 'Slim\Router'
    factory_service: 'slim'
    factory_method: 'router'

  slim.configurator:
    class: 'QL\Hal\Slim\SlimConfigurator'
    arguments: ['@service_container', '%slim.hooks%']

  slim.hook.routes:
    class: 'QL\Hal\Slim\RouteLoaderHook'
    arguments: ['@service_container', '%routes%']
  slim.hook.logger:
    class: 'QL\Hal\Slim\McpLoggerHook'
    arguments: ['@logger.mcp.factory', '@slim.environment']
  slim.hook.errors:
    class: 'QL\Hal\Slim\ErrorPagesHook'
    arguments: ['@error.pages.twig']
  slim.hook.twig:
    class: 'QL\Hal\Slim\TwigEnvironmentHook'
    arguments: ['@twigEnv', '@session']

  slim.logger:
    class: 'QL\Hal\Logger\McpLogWriter'
    arguments: ['@logger']

  ######################################################################################################################
  # HELPERS
  ######################################################################################################################

  url.helper:
    class: 'QL\Hal\Helpers\UrlHelper'
    arguments:
      - @slim.request
      - @slim.response
      - @slim.router

  clock:
    class: 'MCP\DataType\Time\Clock'
    arguments: ['now', 'UTC']

  ######################################################################################################################
  # TWIG STUFF
  ######################################################################################################################

  # HAL Twig Extension
  twigExtension:
    class: 'QL\Hal\Twig\HalExtension'
    arguments:
      - @pushPermissionService
      - @url.helper

  # Twig Loader
  twigLoader:
    class: 'Twig_Loader_Filesystem'
    arguments:
      - '%root%/app/templates'

  # Twig Environment
  twigEnv:
    class: 'Twig_Environment'
    arguments: ['@twigLoader']
    calls:
      - ['addExtension', ['@twigExtension']]

  layout:
    class: 'QL\Hal\Layout'
    arguments:
      - @user
      - @pushPermissionService

  # The primary twig template. All other twig services should use this service as a parent
  twig.template:
    class: 'Twig_Template'
    factory_service: 'twigEnv'
    factory_method: 'loadTemplate'

  ######################################################################################################################
  # BOUNCERS
  ######################################################################################################################

  # Bounce unauthenticated users
  login.bouncer:
    class: 'QL\Hal\Bouncers\LoginBouncer'
    arguments:
      - @session
      - @service_container
      - @url.helper

  # Bounce non-admins
  admin.bouncer:
    class: 'QL\Hal\Bouncers\AdminBouncer'
    arguments:
      - @session
      - @pushPermissionService
      - @twigEnv

  ######################################################################################################################
  # NON-DATABASE SERVICES
  ######################################################################################################################

  ldapTransport:
    class: 'Zend\Ldap\Ldap'
    arguments:
      - 'host': '%ldap.host%'
        'baseDn': '%ldap.baseDn%'
        'accountDomainNameShort': '%ldap.domain%'

  ldapService:
    class: 'MCP\Corp\Account\QLAdService'
    arguments:
      - @ldapTransport
    calls:
      - ['authenticate', ['%ldap.username%', '%ldap.password%', false]]

  pushPermissionService:
    class: 'QL\Hal\PushPermissionService'
    arguments:
      - '@ldapService'
      - @deployment.repo
      - @repository.repo
      - @user.repo
      - '@github'
      - '%debug.godmode%'

  ######################################################################################################################
  # Github API
  ######################################################################################################################

  github:
    class: 'QL\Hal\Services\GithubService'
    arguments:
      - '@github.userService'
      - '@github.repoService'
      - '@github.refService'
      - '@github.pullService'
      - '@github.commitService'
      - '@github.pager'

  github.client:
    class: 'Github\Client'
    arguments: ['@github.httpClient']

  github.httpClient:
    class: 'QL\Hal\GithubApi\HackCachedHttpClient'
    arguments:
      - {base_url: '%github.baseurl%'}
    calls:
      - ['authenticate', ['%github.token%', null, 'http_token']]

  github.pager:
    class: 'Github\ResultPager'
    arguments:
      - @github.client

  github.orgService:
    class: 'Github\Api\Organization'
    arguments:
      - @github.client

  github.pullService:
    class: 'Github\Api\PullRequest'
    arguments:
      - @github.client

  github.refService:
    class: 'Github\Api\GitData\References'
    arguments:
      - @github.client

  github.commitService:
      class: 'Github\Api\GitData\Commits'
      arguments:
        - @github.client

  github.repoService:
    class: 'Github\Api\Repo'
    arguments:
      - @github.client

  github.userService:
    class: 'QL\Hal\GithubApi\HackUser'
    arguments:
      - @github.client

  ######################################################################################################################
  # PAGE LAYOUTS & CONTROLLERS
  ######################################################################################################################

  repository.push.history.twig:
    class: "Twig_Template"
    arguments:
      - "repository.push.history.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  repository.push.history.page:
    class: "QL\\Hal\\Controllers\\Repository\\Push\\HistoryController"
    arguments:
      - @repository.push.history.twig
      - @layout
      - @doctrine.em
      - @repository.repo
      - @push.repo

  repository.build.history.twig:
    class: "Twig_Template"
    arguments:
      - "repository.build.history.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  repository.build.history.page:
    class: "QL\\Hal\\Controllers\\Repository\\Build\\HistoryController"
    arguments:
      - @repository.build.history.twig
      - @layout
      - @doctrine.em
      - @repository.repo
      - @build.repo
      - @user

  repository.build.start.twig:
    class: "Twig_Template"
    arguments:
      - "repository.build.start.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  repository.build.start.page:
    class: "QL\\Hal\\Controllers\\Repository\\Build\\BuildStartController"
    arguments:
      - @repository.build.start.twig
      - @layout
      - @repository.repo
      - @environment.repo
      - @github

  repository.build.start.handle.page:
    class: "QL\\Hal\\Controllers\\Repository\\Build\\BuildStartHandleController"
    arguments:
      - @session
      - @repository.repo
      - @user.repo
      - @environment.repo
      - @doctrine.em
      - @url.helper
      - @user
      - @pushPermissionService
      - @github

  rollback.twig:
    class: "Twig_Template"
    arguments:
      - "rollback.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  rollback.page:
    class: "QL\\Hal\\Controllers\\Repository\\RollbackController"
    arguments:
      - @rollback.twig
      - @layout
      - @repository.repo
      - @server.repo
      - @doctrine.em
      - @user

  build.twig:
    class: "Twig_Template"
    arguments:
      - "build.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  build.page:
    class: "QL\\Hal\\Controllers\\Repository\\Build\\BuildController"
    arguments:
      - @build.twig
      - @layout
      - @build.repo

  push.twig:
    class: "Twig_Template"
    arguments:
      - "push.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  push.page:
    class: "QL\\Hal\\Controllers\\Repository\\Push\\PushController"
    arguments:
      - @push.twig
      - @layout
      - @push.repo

  build.push.twig:
    class: "Twig_Template"
    arguments:
      - "build.push.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  build.push.page:
    class: "QL\\Hal\\Controllers\\Repository\\Push\\BuildPushController"
    arguments:
      - @build.push.twig
      - @layout
      - @doctrine.em
      - @build.repo
      - @user

  ######################################################################################################################
  # SESSION
  ######################################################################################################################

  sessionHandler:
    class: 'QL\Hal\Services\Session\Handler\DoctrineHandler'
    arguments:
      - @session.repo
      - @doctrine.em

  session:
    class: 'QL\Hal\Session'
    arguments:
      - @sessionHandler

  ######################################################################################################################
  # Logging
  ######################################################################################################################

  logger:
    class: 'MCP\Service\Logger\Logger'
    arguments: ['@logger.mcp.service', '@logger.mcp.factory']

  logger.mcp.service:
    class: 'MCP\Service\Logger\Service\GuzzleService'
    arguments: ['@logger.mcp.guzzle', '@logger.mcp.renderer', true]
  logger.mcp.guzzle:
    class: 'Guzzle\Http\Client'
    arguments: ['%logger.mcp.host%']
  logger.mcp.renderer:
    class: 'MCP\Service\Logger\Renderer\XmlRenderer'
    arguments: ['@logger.mcp.writer']
  logger.mcp.writer:
    class: 'XMLWriter'

  logger.mcp.factory:
    class: 'MCP\Service\Logger\Adapter\Psr\MessageFactory'
    arguments: ['@clock']
    calls:
      - ['setDefaultProperty', ['applicationId', '%applicationId%']]
      # replaced at runtime, maybe
      - ['setDefaultProperty', ['machineIPAddress', '@logger.mcp.serverIp']]
      # replaced at runtime
      - ['setDefaultProperty', ['machineName', 'localhost']]
  logger.mcp.serverIp:
    class: 'MCP\DataType\IPv4Address'
    factory_class: 'MCP\DataType\IPv4Address'
    factory_method: 'create'
    arguments: ['0.0.0.0']

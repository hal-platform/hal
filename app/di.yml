services:

  # This is set by LoginBouncer
  currentUserContext:
    class: 'MCP\Corp\Account\User'
    synthetic: true

  # HAL Twig Extension
  twigExtension:
    class: 'QL\Hal\Twig\HalExtension'
    arguments: ["@pushPermissionService"]

  # Twig stuff
  twigLoader:
    class: "Twig_Loader_Filesystem"
    arguments: ["%root%/app/templates"]
  twigEnv:
    class: "Twig_Environment"
    arguments: ["@twigLoader"]
    calls:
      - [addExtension, [@twigExtension]]

  # Twig View for Slim
  twigView:
    class: "QL\Hal\TwigView"
    arguments: ["@twigEnv"]

  # DB related services
  db:
    class: "PDO"
    arguments: ["%db.dsn%", "%db.user%", "%db.pass%"]
    calls: [["setAttribute", [3, 2]]] # PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION
  repoService:
    class: "QL\\Hal\\Services\\RepositoryService"
    arguments: ["@db"]
  serverService:
    class: "QL\\Hal\\Services\\ServerService"
    arguments: ["@db"]
  deploymentService:
    class: "QL\\Hal\\Services\\DeploymentService"
    arguments: ["@db"]
  userService:
    class: "QL\\Hal\\Services\\UserService"
    arguments: ["@db"]
  envService:
    class: "QL\\Hal\\Services\\EnvironmentService"
    arguments: ["@db"]
  arrService:
    class: "QL\\Hal\\Services\\ArrangementService"
    arguments: ["@db"]
  logService:
    class: "QL\\Hal\\Services\\LogService"
    arguments: ["@db"]
  syncOptions:
    class: "QL\\Hal\\Services\\SyncOptions"
    arguments: ["@repoService", "@deploymentService", "@github"]




  # Non-db services
  ldapTransport:
    class: 'Zend\Ldap\Ldap'
    arguments: [{'host': '%ldap.host%', 'baseDn': '%ldap.baseDn%', 'accountDomainNameShort': '%ldap.domain%'}]
  ldapService:
    class: 'MCP\Corp\Account\QLAdService'
    arguments: ['@ldapTransport']

  pushPermissionService:
    class: 'QL\Hal\PushPermissionService'
    arguments:
      - '@ldapService'
      - '@repoService'
      - '@userService'
      - '@github'
      - '%debug.godmode%'

  github:
    class: 'QL\Hal\Services\GithubService'
    arguments:
      - '@github.userService'
      - '@github.repoService'
      - '@github.refService'
      - '@github.pullService'
      - '@github.pager'

  github.client:
    class: "Github\\Client"
    arguments: ['@github.httpClient']

  # Using the filesystem as a cache causes issues because of the different users involve here.
  # - The web front end runs with a user that can RW to /tmp, but not /var/spool/hal9000[test]
  # - The pusher script runs with a different user that can't RW to /tmp, but CAN RW to /var/spool/hal9000[test]
  # So, switching to non-cached client for now at least.
  #github.httpClient:
  #  class: 'Github\HttpClient\CachedHttpClient'
  #  arguments:
  #    - {base_url: "%github.baseurl%", cache_dir: "%github.cachedir%"}
  #  calls:
  #    - ['authenticate', ['%github.token%', null, 'http_token']] # Github\Client::AUTH_HTTP_TOKEN
  # Github\HttpClient

  github.httpClient:
    class: 'Github\HttpClient\HttpClient'
    arguments:
      - {base_url: "%github.baseurl%"}
    calls:
      - ['authenticate', ['%github.token%', null, 'http_token']]

  github.pager:
    class: 'Github\ResultPager'
    arguments: ['@github.client']

  github.orgService:
    class: 'Github\Api\Organization'
    arguments: ['@github.client']
  github.pullService:
    class: 'Github\Api\PullRequest'
    arguments: ["@github.client"]
  github.refService:
    class: 'Github\Api\GitData\References'
    arguments: ['@github.client']
  github.repoService:
    class: 'Github\Api\Repo'
    arguments: ["@github.client"]
  github.userService:
    class: 'QL\Hal\GithubApi\HackUser'
    arguments: ['@github.client']

  # Pages
  login.twig: { arguments: ["login.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  loginPage:
    class: "QL\\Hal\\LoginPage"
    arguments: ["@login.twig"]
  loginHandler:
    class: "QL\\Hal\\LoginHandler"
    arguments: ["@session", "@ldapService", "@login.twig", "@userService"]

  logoutPage:
    class: "QL\\Hal\\LogoutPage"
    arguments: ["@session"]

  users.twig: { arguments: ["users.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  userPage:
    class: "QL\Hal\Users"
    arguments: ["@users.twig", "@userService", '@pushPermissionService', '@layout', @ldapService]

  arrangement-list.twig: { arguments: ["arrangement-list.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  arrangementListPage:
    class: 'QL\Hal\ArrangementListPage'
    arguments: ["@arrangement-list.twig", "@arrService", '@layout']

  arrangement.twig: { arguments: ["arrangement.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  arrangementPage:
    class: 'QL\Hal\ArrangementPage'
    arguments: ["@arrangement.twig", "@arrService", "@repoService", '@layout']

  repository.twig: { arguments: ["repository.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  repositoryPage:
    class: 'QL\Hal\RepositoryPage'
    arguments: ["@repository.twig", "@repoService", "@deploymentService", "@serverService", "@logService", "@pushPermissionService", "@currentUserContext", '@layout']

  admin.dashboard.twig: { arguments: ["admin/dashboard.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  adminDashboardPage:
    class: 'QL\Hal\Admin\Dashboard'
    arguments: ["@admin.dashboard.twig", "@repoService", "@userService", '@layout']

  admin.repositories.twig: { arguments: ["admin/repositories.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  adminRepositoriesPage:
    class: 'QL\Hal\Admin\ManageRepositories'
    arguments: ["@admin.repositories.twig", "@repoService", "@arrService", '@layout']
  adminRepositoriesHandler:
    class: 'QL\Hal\Admin\ManageRepositoriesHandler'
    arguments: ["@admin.repositories.twig", "@repoService", "@arrService", "@github"]
  adminRepositoriesRemoveHandler:
    class: "QL\Hal\Admin\ManageRepositoriesRemove"
    arguments: ["@admin.repositories.twig", "@deploymentService", "@repoService"]

  admin.servers.twig: { arguments: ["admin/servers.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  adminServersPage:
    class: 'QL\Hal\Admin\ManageServers'
    arguments: ["@admin.servers.twig", "@serverService", "@envService", '@layout']
  adminServersHandler:
    class: 'QL\Hal\Admin\ManageServersHandler'
    arguments: ["@admin.servers.twig", "@serverService", "@envService"]

  admin.deployments.twig: { arguments: ["admin/deployments.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  adminDeploymentsPage:
    class: 'QL\Hal\Admin\ManageDeployments'
    arguments: ["@admin.deployments.twig", "@repoService", "@serverService", "@deploymentService", '@layout']
  adminDeploymentsHandler:
    class: "QL\Hal\Admin\ManageDeploymentsHandler"
    arguments: ["@admin.deployments.twig", "@repoService", "@serverService", "@deploymentService", "@session"]

  admin.arrangements.twig: { arguments: ["admin/arrangements.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  adminArrangementsPage:
    class: 'QL\Hal\Admin\ManageArrangements'
    arguments: ["@admin.arrangements.twig", "@arrService", '@layout']
  adminArrangementsHandler:
    class: 'QL\Hal\Admin\ManageArrangementsHandler'
    arguments: ["@admin.arrangements.twig", "@arrService"]

  admin.environments.twig: { arguments: ["admin/environments.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  adminEnvironmentsPage:
    class: 'QL\Hal\Admin\ManageEnvironments'
    arguments: ["@admin.environments.twig", "@envService", '@layout']
  adminEnvironmentsHandler:
    class: 'QL\Hal\Admin\ManageEnvironmentsHandler'
    arguments: ["@admin.environments.twig", "@envService"]
  adminEnvironmentsRemoveHandler:
    class: "QL\Hal\Admin\ManageEnvironmentsRemove"
    arguments: ["@admin.environments.twig", "@envService"]

  admin.users.twig: { arguments: ["admin/users.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  adminUsersPage:
    class: 'QL\Hal\Admin\ManageUsers'
    arguments: ["@admin.users.twig", "@userService", '@layout']

  admin.permissions.twig:
    class:            "Twig_Template"
    arguments:        ["admin/permissions.html.twig"]
    factory_service:  "twigEnv"
    factory_method:   "loadTemplate"

  adminPermissionsPage:
    class:      'QL\Hal\Admin\ManagePermissions'
    arguments:  [@admin.permissions.twig, @repoService, @pushPermissionService, @layout]

  githubUsersApi:
    class: 'QL\Hal\Github\UsersApi'
    arguments: ['@github']

  githubReposApi:
    class: 'QL\Hal\Github\ReposApi'
    arguments: ['@github']

  githubPullsApi:
    class: 'QL\Hal\Github\PullRequestsApi'
    arguments: ['@github']

  sync-code.twig: { arguments: ["sync-code.twig"], class: "Twig_Template", factory_service: "twigEnv", factory_method: "loadTemplate" }
  syncPage:
    class: 'QL\Hal\SyncPage'
    arguments: ["@sync-code.twig", "@syncOptions", '@layout']
  syncHandler:
    class: 'QL\Hal\SyncHandler'
    arguments:
      - "@sync-code.twig"
      - "@syncOptions"
      - "@logService"
      - "@deploymentService"
      - "@session"
      - "%root%/bin/pusher.php"
      - "%build.user%"
      - "%rsync.user%"
      - true

  layout:
      class: 'QL\Hal\Layout'
      arguments: ['@currentUserContext', '@pushPermissionService']

  ######################################################################################################################
  # Bouncers
  ######################################################################################################################

  # Bounce unauthenticated users
  loginBouncer:
    class: 'QL\Hal\Bouncers\LoginBouncer'
    arguments:
      - @session
      - @dic

  # Bounce non-admins
  adminBouncer:
    class: 'QL\Hal\Bouncers\AdminBouncer'
    arguments:
      - @session
      - @pushPermissionService
      - @twigEnv

  ######################################################################################################################
  # Session
  ######################################################################################################################

  sessionHandler:
    class:        'QL\Hal\Services\Session\Handler\MySQLHandler'
    arguments:    [@db]

  session:
      class:      'QL\Hal\Session'
      arguments:  [@sessionHandler]

  ######################################################################################################################
  # Build Notifications & Logging
  ######################################################################################################################

  # Mailer Transport
  buildMailerTransport:
    class:        'Swift_SmtpTransport'
    arguments:    ["%email.hostname%"]

  # Mailer
  buildMailer:
    class:        'Swift_Mailer'
    arguments:    [@buildMailerTransport]

  # Sample Message
  buildMessage:
    class:        "QL\\Hal\\Mail\\Message"
    arguments:    ["%email.subject%", ["%email.notify%"], ["%email.notify.error%"]]

  # Log Sub Handler
  buildLogSubHandler:
    class:        "Monolog\\Handler\\SwiftMailerHandler"
    arguments:    [@buildMailer, @buildMessage, "%build.log.level%"]
    calls:
          - ["setFormatter", [@buildLogFormatter]]

  # HTML Formatter
  buildLogFormatter:
    class:        "QL\\Hal\\Mail\\Formatter\\HtmlFormatter" #"Monolog\\Formatter\\HtmlFormatter"
    arguments:    [] #["%build.date.format%"]

  # Log Handler
  buildLogHandler:
    class:        "Monolog\\Handler\\BufferHandler"
    arguments:    [@buildLogSubHandler]

  # Logger
  buildLogger:
    class:        "Monolog\\Logger"
    arguments:    ["%build.log.name%", [@buildLogHandler]]


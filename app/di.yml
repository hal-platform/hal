services:

  ######################################################################################################################
  # APPLICATION
  ######################################################################################################################

  slim:
    class: 'Slim\Slim'
    arguments:
      - debug: '%debug%'
      - log.writer: '@mcpLogger.slimLogWriter'
    calls:
      - ['hook', ['slim.before', '@mcpLogger.factory.setup', 0]]

  slim.environment:
    class: 'Slim\Environment'
    factory_service: 'slim'
    factory_method: 'environment'

  slim.request:
    class: 'Slim\Http\Request'
    factory_service: 'slim'
    factory_method: 'request'

  slim.response:
    class: 'Slim\Http\Response'
    factory_service: 'slim'
    factory_method: 'response'

  slim.router:
    class: 'Slim\Router'
    factory_service: 'slim'
    factory_method: 'router'

  # This is set by LoginBouncer
  user:
    class: 'MCP\Corp\Account\User'
    synthetic: true

  ######################################################################################################################
  # HELPERS
  ######################################################################################################################

  url.helper:
    class: 'QL\Hal\Helpers\UrlHelper'
    arguments:
      - @slim.request
      - @slim.response
      - @slim.router

  ######################################################################################################################
  # TWIG STUFF
  ######################################################################################################################

  # HAL Twig Extension
  twigExtension:
    class: 'QL\Hal\Twig\HalExtension'
    arguments:
      - @pushPermissionService
      - @url.helper

  # Twig Loader
  twigLoader:
    class: 'Twig_Loader_Filesystem'
    arguments:
      - "%root%/app/templates"

  # Twig Environment
  twigEnv:
    class: 'Twig_Environment'
    arguments:
      - @twigLoader
    calls:
      - [addExtension, [@twigExtension]]

  # Twig View for Slim
  twigView:
    class: 'QL\Hal\TwigView'
    arguments:
      - @twigEnv

  layout:
    class: 'QL\Hal\Layout'
    arguments:
      - @user
      - @pushPermissionService

  ######################################################################################################################
  # BOUNCERS
  ######################################################################################################################

  # Bounce unauthenticated users
  login.bouncer:
    class: 'QL\Hal\Bouncers\LoginBouncer'
    arguments:
      - @session
      - @dic
      - @url.helper

  # Bounce non-admins
  admin.bouncer:
    class: 'QL\Hal\Bouncers\AdminBouncer'
    arguments:
      - @session
      - @pushPermissionService
      - @twigEnv

  ######################################################################################################################
  # DATABASE SERVICES
  ######################################################################################################################

  db:
    class: "PDO"
    arguments:
      - "%db.dsn%"
      - "%db.user%"
      - "%db.pass%"
    calls:
      - ["setAttribute", [3, 2]] # PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION

  repoService:
    class: "QL\\Hal\\Services\\RepositoryService"
    arguments:
      - @db

  serverService:
    class: "QL\\Hal\\Services\\ServerService"
    arguments:
      - @db

  deploymentService:
    class: "QL\\Hal\\Services\\DeploymentService"
    arguments:
      - @db

  userService:
    class: "QL\\Hal\\Services\\UserService"
    arguments:
      - @db

  envService:
    class: "QL\\Hal\\Services\\EnvironmentService"
    arguments:
      - @db

  arrService:
    class: "QL\\Hal\\Services\\ArrangementService"
    arguments:
      - @db

  logService:
    class: "QL\\Hal\\Services\\LogService"
    arguments:
      - @db

  syncOptions:
    class: "QL\\Hal\\Services\\SyncOptions"
    arguments:
      - @repoService
      - @deploymentService
      - @github

  ######################################################################################################################
  # NON-DATABASE SERVICES
  ######################################################################################################################

  ldapTransport:
    class: 'Zend\Ldap\Ldap'
    arguments:
      - 'host': '%ldap.host%'
        'baseDn': '%ldap.baseDn%'
        'accountDomainNameShort': '%ldap.domain%'

  ldapService:
    class: 'MCP\Corp\Account\QLAdService'
    arguments:
      - @ldapTransport
    calls:
      - ['authenticate', ['%ldap.username%', '%ldap.password%', false]]

  pushPermissionService:
    class: 'QL\Hal\PushPermissionService'
    arguments:
      - '@ldapService'
      - '@repoService'
      - '@userService'
      - '@github'
      - '%debug.godmode%'

  ######################################################################################################################
  # Github API
  ######################################################################################################################

  github:
    class: 'QL\Hal\Services\GithubService'
    arguments:
      - '@github.userService'
      - '@github.repoService'
      - '@github.refService'
      - '@github.pullService'
      - '@github.pager'

  github.client:
    class: 'Github\Client'
    arguments:
      - @github.httpClient

  github.httpClient:
    class: 'QL\Hal\GithubApi\HackCachedHttpClient'
    arguments:
      - {base_url: '%github.baseurl%'}
    calls:
      - ['authenticate', ['%github.token%', null, 'http_token']]

  # Using the filesystem as a cache causes issues because of the different users involve here.
  # - The web front end runs with a user that can RW to /tmp, but not /var/spool/hal9000[test]
  # - The pusher script runs with a different user that can't RW to /tmp, but CAN RW to /var/spool/hal9000[test]
  # In instances where the filesystem is unavailable, set the memory cache on the http client.
  # Perhaps redis/apcu would be a better long term solution.
  github.memory-cache:
    class: 'QL\Hal\GithubApi\InMemoryCache'

  github.pager:
    class: 'Github\ResultPager'
    arguments:
      - @github.client

  github.orgService:
    class: 'Github\Api\Organization'
    arguments:
      - @github.client

  github.pullService:
    class: 'Github\Api\PullRequest'
    arguments:
      - @github.client

  github.refService:
    class: 'Github\Api\GitData\References'
    arguments:
      - @github.client

  github.repoService:
    class: 'Github\Api\Repo'
    arguments:
      - @github.client

  github.userService:
    class: 'QL\Hal\GithubApi\HackUser'
    arguments:
      - @github.client

  ######################################################################################################################
  # PAGE LAYOUTS & CONTROLLERS
  ######################################################################################################################

  ## TEMP
  nyi.twig:
    class: "Twig_Template"
    arguments:
      - 'nyi.twig'
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  ## TEMP
  nyi.page:
    class: "QL\\Hal\\Controllers\\NyiController"
    arguments:
      - @nyi.twig

  login.twig:
    class: "Twig_Template"
    arguments:
      - 'login.twig'
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  login.page:
    class: "QL\\Hal\\Controllers\\LoginController"
    arguments:
      - @login.twig

  login.handle:
    class: "QL\\Hal\\Controllers\\LoginHandleController"
    arguments:
      - @login.twig
      - @ldapService
      - @user.repo
      - @doctrine.em
      - @session
      - @url.helper

  logout.handle:
    class: "QL\\Hal\\Controllers\\LogoutController"
    arguments:
      - @session
      - @url.helper

  profile.twig:
    class: "Twig_Template"
    arguments:
      - 'profile.twig'
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  profile.page:
    class: "QL\\Hal\\Controllers\\ProfileController"
    arguments:
      - @profile.twig
      - @layout
      - @pushPermissionService
      - @ldapService
      - @user.repo
      - @user
      - @doctrine.em

  groups.twig:
    class: "Twig_Template"
    arguments:
      - 'groups.twig'
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  groups.page:
    class: "QL\\Hal\\Controllers\\GroupsController"
    arguments:
      - @groups.twig
      - @layout
      - @group.repo

  group.twig:
    class: "Twig_Template"
    arguments:
      - 'group.twig'
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  group.page:
    class: "QL\\Hal\\Controllers\\Groups\\GroupController"
    arguments:
      - @group.twig
      - @layout
      - @group.repo
      - @repository.repo

  repository.twig:
    class: "Twig_Template"
    arguments:
      - "repository.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  repository.page:
    class: "QL\\Hal\\Controllers\\Repository\\RepositoryController"
    arguments:
      - @repository.twig
      - @layout
      - @pushPermissionService
      - @doctrine.em
      - @repository.repo
      - @build.repo
      - @push.repo
      - @user

  repository.push.history.twig:
    class: "Twig_Template"
    arguments:
      - "repository.push.history.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  repository.push.history.page:
    class: "QL\\Hal\\Controllers\\Repository\\RepositoryPushHistoryController"
    arguments:
      - @repository.push.history.twig
      - @layout
      - @doctrine.em
      - @repository.repo
      - @push.repo

  repository.build.history.twig:
    class: "Twig_Template"
    arguments:
      - "repository.build.history.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  repository.build.history.page:
    class: "QL\\Hal\\Controllers\\Repository\\RepositoryBuildHistoryController"
    arguments:
      - @repository.build.history.twig
      - @layout
      - @doctrine.em
      - @repository.repo
      - @build.repo
      - @user

  rollback.twig:
    class: "Twig_Template"
    arguments:
      - "rollback.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  rollback.page:
    class: "QL\\Hal\\Controllers\\Repository\\RollbackController"
    arguments:
      - @rollback.twig
      - @layout
      - @repository.repo
      - @server.repo
      - @doctrine.em
      - @user

  ######################################################################################################################
  # ADMIN PAGE LAYOUTS & CONTROLLERS
  ######################################################################################################################

  admin.dashboard.twig:
    class: "Twig_Template"
    arguments:
      - "admin/dashboard.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  adminDashboardPage:
    class: 'QL\Hal\Admin\Dashboard'
    arguments:
      - @admin.dashboard.twig
      - @repoService
      - @userService
      - @layout

  admin.repositories.twig:
    class: "Twig_Template"
    arguments:
      - "admin/repositories.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  adminRepositoriesPage:
    class: 'QL\Hal\Admin\ManageRepositories'
    arguments:
      - @admin.repositories.twig
      - @repoService
      - @arrService
      - @layout

  adminRepositoriesHandler:
    class: 'QL\Hal\Admin\ManageRepositoriesHandler'
    arguments:
      - @admin.repositories.twig
      - @repoService
      - @arrService
      - @github

  adminRepositoriesRemoveHandler:
    class: "QL\Hal\Admin\ManageRepositoriesRemove"
    arguments:
      - @admin.repositories.twig
      - @deploymentService
      - @repoService

  admin.servers.twig:
    class: "Twig_Template"
    arguments:
      - "admin/servers.twig"
    factory_service: @twigEnv
    factory_method: "loadTemplate"

  adminServersPage:
    class: 'QL\Hal\Admin\ManageServers'
    arguments:
      - @admin.servers.twig
      - @serverService
      - @envService
      - @layout

  adminServersHandler:
    class: 'QL\Hal\Admin\ManageServersHandler'
    arguments:
      - @admin.servers.twig
      - @serverService
      - @envService

  admin.deployments.twig:
    class: "Twig_Template"
    arguments:
      - "admin/deployments.twig"
    factory_service: @twigEnv
    factory_method: "loadTemplate"

  adminDeploymentsPage:
    class: 'QL\Hal\Admin\ManageDeployments'
    arguments:
      - @admin.deployments.twig
      - @repoService
      - @serverService
      - @deploymentService
      - @layout

  adminDeploymentsHandler:
    class: "QL\Hal\Admin\ManageDeploymentsHandler"
    arguments:
      - @admin.deployments.twig
      - @repoService
      - @serverService
      - @deploymentService
      - @session

  admin.arrangements.twig:
    class: "Twig_Template"
    arguments:
      - "admin/arrangements.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  adminArrangementsPage:
    class: 'QL\Hal\Admin\ManageArrangements'
    arguments:
      - @admin.arrangements.twig
      - @arrService
      - @layout

  adminArrangementsHandler:
    class: 'QL\Hal\Admin\ManageArrangementsHandler'
    arguments:
      - @admin.arrangements.twig
      - @arrService

  admin.environments.twig:
    class: "Twig_Template"
    arguments:
      - "admin/environments.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  adminEnvironmentsPage:
    class: 'QL\Hal\Admin\ManageEnvironments'
    arguments:
      - @admin.environments.twig
      - @envService
      - @layout

  adminEnvironmentsHandler:
    class: 'QL\Hal\Admin\ManageEnvironmentsHandler'
    arguments:
      - @admin.environments.twig
      - @envService

  adminEnvironmentsRemoveHandler:
    class: "QL\Hal\Admin\ManageEnvironmentsRemove"
    arguments:
      - @admin.environments.twig
      - @envService

  admin.users.twig:
    arguments:
      - "admin/users.twig"
    class: "Twig_Template"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  adminUsersPage:
    class: 'QL\Hal\Admin\ManageUsers'
    arguments:
      - @admin.users.twig
      - @userService
      - @layout

  admin.permissions.twig:
    class: "Twig_Template"
    arguments:
      - "admin/permissions.html.twig"
    factory_service: "twigEnv"
    factory_method: "loadTemplate"

  adminPermissionsPage:
    class:      'QL\Hal\Admin\ManagePermissions'
    arguments:
      - @admin.permissions.twig
      - @repoService
      - @pushPermissionService
      - @layout

  githubUsersApi:
    class: 'QL\Hal\Github\UsersApi'
    arguments:
      - @github

  githubReposApi:
    class: 'QL\Hal\Github\ReposApi'
    arguments:
      - @github

  githubPullsApi:
    class: 'QL\Hal\Github\PullRequestsApi'
    arguments:
      - @github

  sync-code.twig:
    class: "Twig_Template"
    arguments:
      - "sync-code.twig"
    factory_service:  "twigEnv"
    factory_method:   "loadTemplate"

  syncPage:
    class: 'QL\Hal\SyncPage'
    arguments:
      - @sync-code.twig
      - @syncOptions
      - @layout

  syncHandler:
    class: 'QL\Hal\SyncHandler'
    arguments:
      - "@sync-code.twig"
      - "@syncOptions"
      - "@logService"
      - "@deploymentService"
      - "@github"
      - "@session"
      - "%root%/bin/pusher.php"
      - "%build.user%"
      - "%rsync.user%"
      - true

  ######################################################################################################################
  # API CONTROLLERS
  ######################################################################################################################



  ######################################################################################################################
  # SESSION
  ######################################################################################################################

  sessionHandler:
    class: 'QL\Hal\Services\Session\Handler\MySQLHandler'
    arguments:
      - @db

  session:
    class: 'QL\Hal\Session'
    arguments:
      - @sessionHandler

  ######################################################################################################################
  # PUSHER COMMAND
  ######################################################################################################################

  # Pusher
  pushCommand:
    class: 'QL\Hal\PushCommand'
    arguments:
      - '@repoService'
      - '@deploymentService'
      - '@logService'
      - '@github'
      - '@buildLogger'
      - '@buildMessage'
      - '%build.dir%'
      - '%rsync.user%'

  ######################################################################################################################
  # Build Notifications & Logging
  ######################################################################################################################

  # Mailer Transport
  buildMailerTransport:
    class: 'Swift_SmtpTransport'
    arguments:
      - "%email.hostname%"

  # Mailer
  buildMailer:
    class: 'Swift_Mailer'
    arguments:
      - @buildMailerTransport

  # Sample Message
  buildMessage:
    class: "QL\\Hal\\Mail\\Message"
    arguments:
      - "%email.subject%"
      - ["%email.notify%"]
      - ["%email.notify.error%"]

  # Log Sub Handler
  buildLogSubHandler:
    class: "Monolog\\Handler\\SwiftMailerHandler"
    arguments:
      - @buildMailer
      - @buildMessage
      - "%build.log.level%"
    calls:
      - ["setFormatter", [@buildLogFormatter]]

  # HTML Formatter
  buildLogFormatter:
    class: "QL\\Hal\\Mail\\Formatter\\HtmlFormatter"

  # Log Handler
  buildLogHandler:
    class: "Monolog\\Handler\\BufferHandler"
    arguments:
      - @buildLogSubHandler

  # Logger
  buildLogger:
    class: "Monolog\\Logger"
    arguments:
      - "%build.log.name%"
      - [@buildLogHandler]

  # MCP Logger
  mcpLogger.slimLogWriter:
    class: 'QL\Hal\Logger\McpLogWriter'
    arguments:
      - @mcpLogger

  mcpLogger:
    class: 'MCP\Service\Logger\Logger'
    arguments:
      - @mcpLogger.service
      - @mcpLogger.factory

  mcpLogger.service:
    class: 'MCP\Service\Logger\Service\GuzzleService'
    arguments:
      - @mcpLogger.guzzle
      - @mcpLogger.renderer
      - true

  mcpLogger.guzzle:
    class: 'Guzzle\Http\Client'
    arguments:
      - 'http://%mcpLogger.host%:2581/web/core/logentries'

  mcpLogger.renderer:
    class: 'MCP\Service\Logger\Renderer\XmlRenderer'
    arguments:
      - @mcpLogger.renderer.writer

  mcpLogger.renderer.writer:
    class: 'XMLWriter'

  mcpLogger.factory:
    class: 'MCP\Service\Logger\Adapter\Psr\MessageFactory'
    arguments:
      - @mcpLogger.factory.clock
    calls:
      - ['setDefaultProperty', ['applicationId', '%mcpLogger.applicationId%']]
      - ['setDefaultProperty', ['machineIPAddress', '@mcpLogger.factory.serverIp']]
      - ['setDefaultProperty', ['machineName', 'localhost']]

  mcpLogger.factory.clock:
    class: 'MCP\DataType\Time\Clock'
    arguments:
      - 'now'
      - 'UTC'

  mcpLogger.factory.setup:
    class: 'QL\Hal\Logger\McpSetupHook'
    arguments:
      - @mcpLogger.factory
      - @dic

  mcpLogger.factory.serverIp:
    class: 'MCP\DataType\IPv4Address'
    factory_class: 'MCP\DataType\IPv4Address'
    factory_method: 'create'
    arguments:
      - '0.0.0.0'

parameters:
    routes.api.regex.alphanum: '[A-Za-z0-9]+'
    routes.api.regex.digit: '[0-9]+'
    routes.api.regex.githubname: '[A-Za-z0-9\.\-]+'

    routes.api.regex.buildId: '[A-Za-z0-9\_\-\.]+'
    routes.api.regex.pushId: %routes.api.regex.buildId%
    routes.api.regex.queue.refresh: '[A-Za-z0-9\+\-\.]+'

    routes.api:

        ################################################################################################################
        # INTERNAL API ROUTES (for use by local javascript)
        ################################################################################################################

        api.github.user.repositories:
            method: 'GET'
            route: '/api/github/users/:username/repositories'
            stack: ['login.bouncer', 'api.github.user.repositories']
            conditions: {username: %routes.api.regex.githubname%}

        ################################################################################################################
        # PUBLIC API ROUTES
        ################################################################################################################

        api.index:
            method: 'GET'
            route: '/api'
            stack: ['middleware.cachedApi', 'api.index']

        api.environments:
            method: 'GET'
            route: '/api/environments'
            stack: ['middleware.cachedApi', 'api.environments']

        api.environment:
            method: 'GET'
            route: '/api/environments/:id'
            stack: ['middleware.cachedApi', 'api.environment']
            conditions: {id: %routes.api.regex.digit%}

        api.servers:
            method: 'GET'
            route: '/api/servers'
            stack: ['middleware.cachedApi', 'api.servers']

        api.server:
            method: 'GET'
            route: '/api/servers/:id'
            stack: ['middleware.cachedApi', 'api.server']
            conditions: {id: %routes.api.regex.digit%}

        api.groups:
            method: 'GET'
            route: '/api/groups'
            stack: ['middleware.cachedApi', 'api.groups']

        api.group:
            method: 'GET'
            route: '/api/groups/:id'
            stack: ['middleware.cachedApi', 'api.group']
            conditions: {id: %routes.api.regex.digit%}

        api.users:
            method: 'GET'
            route: '/api/users'
            stack: ['middleware.cachedApi', 'api.users']

        api.user:
            method: 'GET'
            route: '/api/users/:id'
            stack: ['middleware.cachedApi', 'api.user']
            conditions: {id: %routes.api.regex.digit%}

        api.deployment:
            method: 'GET'
            route: '/api/deployment/:id'
            stack: ['middleware.cachedApi', 'api.deployment']
            conditions: {id: %routes.api.regex.digit%}

        # @todo change this url because it is terrible
        api.deployment.lastpush:
            method: 'GET'
            route: '/api/deployment/:id/last-push'
            stack: ['middleware.cachedApi', 'api.deployment.lastpush']
            conditions: {id: %routes.api.regex.digit%}

        api.build:
            method: 'GET'
            route: '/api/builds/:id'
            stack: ['middleware.cachedApi', 'api.build']
            conditions: {id: %routes.api.regex.buildId%}

        api.build.logs:
            method: 'GET'
            route: '/api/builds/:id/logs'
            stack: ['middleware.cachedApi', 'api.build.logs']
            conditions: {id: %routes.api.regex.buildId%}

        api.push:
            method: 'GET'
            route: '/api/pushes/:id'
            stack: ['middleware.cachedApi', 'api.push']
            conditions: {id: %routes.api.regex.pushId%}

        api.push.logs:
            method: 'GET'
            route: '/api/pushes/:id/logs'
            stack: ['middleware.cachedApi', 'api.push.logs']
            conditions: {id: %routes.api.regex.pushId%}

        api.event.log:
            method: 'GET'
            route: '/api/eventlogs/:id'
            stack: ['middleware.cachedApi', 'api.event.log']
            conditions: {id: %routes.api.regex.alphanum%}

        api.repositories:
            method: 'GET'
            route: '/api/repositories'
            stack: ['middleware.cachedApi', 'api.repositories']

        api.repository:
            method: 'GET'
            route: '/api/repositories/:id'
            stack: ['middleware.cachedApi', 'api.repository']
            conditions: {id: %routes.api.regex.digit%}

        api.deployments:
            method: 'GET'
            route: '/api/repositories/:id/deployments'
            stack: ['middleware.cachedApi', 'api.deployments']
            conditions: {id: %routes.api.regex.digit%}

        api.builds:
            method: 'GET'
            route: '/api/repositories/:id/builds'
            stack: ['middleware.cachedApi', 'api.builds']
            conditions: {id: %routes.api.regex.digit%}

        api.pushes:
            method: 'GET'
            route: '/api/repositories/:id/pushes'
            stack: ['middleware.cachedApi', 'api.pushes']
            conditions: {id: %routes.api.regex.digit%}

        api.queue:
            method: 'GET'
            route: '/api/queue'
            stack: ['middleware.cachedApi', 'api.queue']

        api.queue.refresh:
            method: 'GET'
            route: '/api/queue-refresh/:jobs'
            stack: ['middleware.cachedApi', 'api.queue.refresh']
            conditions: {jobs: %routes.api.regex.queue.refresh%}

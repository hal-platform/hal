services:

    ####################################################################################################################
    # SERVICES
    ####################################################################################################################

    kraken.permissions:
        class: 'QL\Kraken\Service\PermissionService'
        arguments: [@permissions]

    kraken.consul:
        class: 'QL\Kraken\Service\ConsulService'
        arguments:
            - @kraken.guzzle
            - @kraken.crypto.db
            - %kraken.environmentalize%

    kraken.deploy:
        class: 'QL\Kraken\Service\DeploymentService'
        arguments:
            - @doctrine.em
            - @kraken.consul
            - @kraken.crypto.db
            - @kraken.crypto.factory
            - @json
            - @logger

    kraken.diff:
        class: 'QL\Kraken\ConfigurationDiffService'
        arguments: [@doctrine.em]

    ####################################################################################################################
    # UTIL
    ####################################################################################################################

    kraken.template:
        parent: 'twig.template'
        class: 'QL\Kraken\Application\AutoRenderingTemplate'
        calls: [['setResponse', [@slim.response]]]

    kraken.twig.extension:
        class: 'QL\Kraken\Application\KrakenTwigExtension'
        arguments: [@kraken.permissions, @json]

    kraken.json:
        class: 'QL\Panthor\Utility\Json'

    kraken.guzzle:
        class: 'GuzzleHttp\Client'

    kraken.random:
        class: 'QL\Hal\Core\RandomGenerator'

    kraken.template.skeletor:
        class: 'QL\Kraken\Application\SkeletorConfigurationTemplate'
        arguments: [@clock, @kraken.random]

    # JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_AMP | JSON_HEX_QUOT | JSON_PRESERVE_ZERO_FRACTION
    kraken.json.encoder:
        class: 'QL\Panthor\Utility\Json'
        calls:
            - ['setEncodingOptions', [1039]]

    ####################################################################################################################
    # VALIDATORS
    ####################################################################################################################

    kraken.validator.property:
        class: 'QL\Kraken\Validator\PropertyValidator'
        arguments:
            - @doctrine.em
            - @kraken.json.encoder
            - @kraken.crypto.db
            - @kraken.random

    kraken.validator.environment:
        class: 'QL\Kraken\Validator\EnvironmentValidator'
        arguments:
            - @doctrine.em
            - @kraken.crypto.db
            - @kraken.random

    kraken.validator.application:
        class: 'QL\Kraken\Validator\ApplicationValidator'
        arguments: [@doctrine.em, @kraken.random]

    ####################################################################################################################
    # encryption
    ####################################################################################################################

    kraken.crypto.factory:
        class: 'QL\Kraken\Utility\CryptoFactory'
        arguments:
            - @kraken.crypto.qks.factory
            - @kraken.crypto.factory.secret.file

    kraken.crypto.qks.factory:
        class: 'QL\Kraken\Utility\QKSFactory'
        arguments:
            - @kraken.crypto.qmp.http
            - @kraken.crypto.qmp.json
            - @kraken.crypto.qmp.envelope
            - @kraken.crypto.qmp.box

    kraken.crypto.factory.secret.file:
        class: 'stdClass'
        factory: ['QL\Panthor\Utility\Stringify', 'template']
        arguments: ['%%s/%%s', [@root, %encrypter.kraken.secret.path%]]

    kraken.crypto.db:
        class: 'MCP\Crypto\Package\TamperResistantPackage'
        factory: [@kraken.crypto.factory, 'getTRP']

    kraken.crypto.qmp.json:
        class: 'QL\MCP\QKS\Crypto\Client\Parser\JsonParser'
        arguments: [@kraken.crypto.qmp.json.schema, @kraken.crypto.qmp.json.resolver]

    kraken.crypto.qmp.json.schema:
        class: 'JsonSchema\Validator'
    kraken.crypto.qmp.json.resolver:
        class: 'JsonSchema\RefResolver'

    # kraken.crypto.decrypter:
        # class: 'QL\Hal\Core\Crypto\SymmetricDecrypter'
        # factory: [@kraken.crypto.factory, 'getSymmetricDecrypter']

    # omg kill me

    kraken.crypto.qmp.envelope:
        class: 'QL\MCP\QKS\Crypto\Envelope\Factory'
        arguments: [@kraken.crypto.qmp.box]
    kraken.crypto.qmp.box:
        class: 'QL\MCP\QKS\Crypto\Envelope\Box\Factory'

    kraken.crypto.qmp.http:
        class: 'QL\MCP\Http\Client'
        arguments:
            - @kraken.crypto.qmp.guzzle.handler
            -
                connect_timeout: 2
                request_timeout: 5

    kraken.crypto.qmp.guzzle.handler:
        class: 'QL\MCP\Http\Handler\Guzzle5Handler'
        arguments: [@kraken.crypto.qmp.guzzle]

    kraken.crypto.qmp.guzzle:
        class: 'GuzzleHttp\Client'

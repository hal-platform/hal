parameters:
    routes.kraken.regex.digit: '[0-9]+'
    routes.kraken.regex.hex: '[0-9a-fA-F]{32}'

    kraken.routes:

        ################################################################################################################
        # CORE ROUTES
        ################################################################################################################

        kraken:
            route: '/kraken'
            stack: ['middleware.login', 'kraken.applications.page']

        kraken.applications:
            route: '/kraken/applications'
            stack: ['middleware.login', 'kraken.applications.page']

        kraken.environments:
            route: '/kraken/environments'
            stack: ['middleware.login', 'kraken.environments.page']

        kraken.help:
            method: 'GET'
            route: '/kraken/help'
            stack: ['kraken.help.page']

        # protected
        kraken.admin.audit.logs.page1:
            method: 'GET'
            route: '/kraken/admin/audit-logs'
            stack: ['middleware.admin', 'kraken.admin.audit.logs.page']
        kraken.admin.audit.logs:
            method: 'GET'
            route: '/kraken/admin/audit-logs/page/:page'
            stack: ['middleware.admin', 'kraken.admin.audit.logs.page']
            conditions: {page: %routes.kraken.regex.digit%}
        kraken.admin.audit.log:
            method: 'GET'
            route: '/kraken/admin/audit-logs/:auditLog'
            stack: ['middleware.admin', 'kraken.middleware.require.entity', 'kraken.admin.audit.log.page']
            conditions: {auditLog: %routes.kraken.regex.hex%}

        ################################################################################################################
        # APPLICATION
        ################################################################################################################

        kraken.application:
            route: '/kraken/applications/:application'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.application.page']
            conditions: {application: %routes.kraken.regex.hex%}

        kraken.status:
            route: '/kraken/applications/:application/status'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.status.page']
            conditions: {application: %routes.kraken.regex.hex%}

        kraken.application.add:
            route: '/kraken/applications/add'
            stack: ['middleware.login', 'kraken.application.add.page']

        # protected
        kraken.application.edit:
            route: '/kraken/applications/:application/edit'
            stack: ['kraken.middleware.lead', 'kraken.middleware.require.entity', 'kraken.application.edit.page']
            conditions: {application: %routes.kraken.regex.hex%}

        # protected
        kraken.application.target.add:
            route: '/kraken/applications/:application/environments'
            stack: ['kraken.middleware.lead', 'kraken.middleware.require.entity', 'kraken.application.target.add.page']
            conditions: {application: %routes.kraken.regex.hex%}

        # protected, prod protected by controller
        kraken.application.target.edit:
            route: '/kraken/applications/:application/targets/:target/edit'
            stack: ['kraken.middleware.lead', 'kraken.middleware.require.entity', 'kraken.application.target.edit.page']
            conditions: {target: %routes.kraken.regex.hex%}

        ################################################################################################################
        # ENVIRONMENT
        ################################################################################################################

        # protected
        kraken.environment.add:
            route: '/kraken/environments/add'
            stack: ['middleware.super', 'kraken.environment.add.page']

        kraken.environment:
            route: '/kraken/environments/:environment'
            stack: ['kraken.middleware.require.entity', 'kraken.environment.page']
            conditions: {environment: %routes.kraken.regex.hex%}

        # protected
        kraken.environment.edit:
            route: '/kraken/environments/:environment/edit'
            stack: ['middleware.super', 'kraken.middleware.require.entity', 'kraken.environment.edit.page']
            conditions: {environment: %routes.kraken.regex.hex%}

        # protected
        kraken.environment.remove.confirm:
            method: 'GET'
            route: '/kraken/environments/:environment/remove'
            stack: ['middleware.super', 'kraken.middleware.require.entity', 'delete.confirm.page']
            conditions: {environment: %routes.kraken.regex.hex%}
        kraken.environment.remove:
            method: 'POST'
            route: '/kraken/environments/:environment/remove'
            stack: ['middleware.super', 'kraken.middleware.require.entity', 'kraken.environment.remove.handler']
            conditions: {environment: %routes.kraken.regex.hex%}

        ################################################################################################################
        # CONFIGURATION
        ################################################################################################################

        kraken.configuration:
            route: '/kraken/configurations/:configuration'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.configuration.page']
            conditions: {configuration: %routes.kraken.regex.hex%}

        kraken.configuration.compare:
            route: '/kraken/configurations/:configuration/compare'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.configuration.compare.page']
            conditions: {configuration: %routes.kraken.regex.hex%}

        kraken.configuration.history.page1:
            route: '/kraken/applications/:application/configurations'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.configuration.history.page']
            conditions:
                application: %routes.kraken.regex.hex%
        kraken.configuration.history:
            route: '/kraken/applications/:application/configurations/page/:page'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.configuration.history.page']
            conditions:
                application: %routes.kraken.regex.hex%
                page: %routes.kraken.regex.digit%

        kraken.configuration.latest:
            route: '/kraken/applications/:application/environments/:environment'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.configuration.latest.page']
            conditions:
                application: %routes.kraken.regex.hex%
                environment: %routes.kraken.regex.hex%

        ################################################################################################################
        # CRUD - SCHEMA
        ################################################################################################################

        # protected
        kraken.schema:
            route: '/kraken/applications/:application/configuration-schema'
            stack: ['kraken.middleware.lead', 'kraken.middleware.require.entity', 'kraken.application.schema.page']
            conditions:
                application: %routes.kraken.regex.hex%

        # protected
        kraken.schema.add:
            route: '/kraken/applications/:application/schemas/add'
            stack: ['kraken.middleware.lead', 'kraken.middleware.require.entity', 'kraken.schema.add.page']
            conditions: {application: %routes.kraken.regex.hex%}

        # protected
        kraken.schema.skeletor:
            method: 'POST'
            route: '/kraken/applications/:application/schemas/prime-skeletor'
            stack: ['kraken.middleware.lead', 'kraken.middleware.require.entity', 'kraken.schema.skeletor.handler']
            conditions:
                application: %routes.kraken.regex.hex%

        # protected by controller
        kraken.schema.edit:
            route: '/kraken/schemas/:schema/edit'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.schema.edit.page']
            conditions:
                schema: %routes.kraken.regex.hex%
        # protected by controller
        kraken.schema.remove.confirm:
            method: 'GET'
            route: '/kraken/schemas/:schema/remove'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.schema.remove.page']
            conditions:
                schema: %routes.kraken.regex.hex%
        kraken.schema.remove:
            method: 'POST'
            route: '/kraken/schemas/:schema/remove'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.schema.remove.handler']
            conditions:
                schema: %routes.kraken.regex.hex%

        ################################################################################################################
        # CRUD - PROPERTY
        ################################################################################################################

        # protected by controller
        kraken.property.add:
            route: '/kraken/applications/:application/environments/:environment/add'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.property.add.page']
            conditions:
                application: %routes.kraken.regex.hex%
                environment: %routes.kraken.regex.hex%

        kraken.property:
            route: '/kraken/properties/:property'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.property.page']
            conditions:
                property: %routes.kraken.regex.hex%

        # protected by controller
        kraken.property.edit:
            route: '/kraken/properties/:property/edit'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.property.edit.page']
            conditions:
                property: %routes.kraken.regex.hex%

        # protected by controller
        kraken.property.remove.confirm:
            method: 'GET'
            route: '/kraken/properties/:property/remove'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.property.remove.page']
            conditions:
                property: %routes.kraken.regex.hex%
        kraken.property.remove:
            method: 'POST'
            route: '/kraken/properties/:property/remove'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.property.remove.handler']
            conditions:
                property: %routes.kraken.regex.hex%

        ################################################################################################################
        # DEPLOY
        ################################################################################################################

        # deploy configuration to target
        # protected by controller
        kraken.deploy:
            method: ['GET']
            route: '/kraken/targets/:target/deploy'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.deploy.page']
            conditions: {target: %routes.kraken.regex.hex%}

        # protected by controller
        kraken.deploy.handler:
            method: ['POST']
            route: '/kraken/targets/:target/deploy'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.deploy.handler']
            conditions: {target: %routes.kraken.regex.hex%}

        # rollback previous or failed configuration to target
        # protected by controller
        kraken.rollback:
            method: ['GET']
            route: '/kraken/configurations/:configuration/rollback'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.rollback.page']
            conditions: {configuration: %routes.kraken.regex.hex%}

        # protected by controller
        kraken.rollback.handler:
            method: ['POST']
            route: '/kraken/configurations/:configuration/rollback'
            stack: ['middleware.login', 'kraken.middleware.require.entity', 'kraken.rollback.handler']
            conditions: {configuration: %routes.kraken.regex.hex%}

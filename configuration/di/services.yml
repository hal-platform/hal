services:

    ####################################################################################################################
    # NON-DATABASE SERVICES
    ####################################################################################################################

    ldap.transport:
        class: 'Zend\Ldap\Ldap'
        arguments:
            -
                host: %ldap.host%
                baseDn: %ldap.baseDn%
                accountDomainNameShort: %ldap.domain%

    ldap:
        class: 'MCP\Corp\Account\QLAdService'
        arguments: [@ldap.transport]
        calls:
            - ['authenticate', [%ldap.username%, %ldap.password%, false]]

    permissions:
        class: 'QL\Hal\Services\PermissionsService'
        arguments:
            - @ldap
            - @doctrine.em
            - @github
            - %permissions.prod.envs%
            - %permissions.hal.repos%
        calls:
            - ['setCache', [@cache]]
            - ['setCacheTTL', [%cache.permissions.ttl%]]

    permissions.new:
        class: 'QL\Hal\Service\NewPermissionsService'
        arguments: [@doctrine.em, @json]

    global.message:
        class: 'QL\Hal\Services\GlobalMessageService'
        arguments: [@redis]

    sticky.environment:
        class: 'QL\Hal\Services\StickyEnvironmentService'
        arguments:
            - @slim.cookies
            - @json
            - %cookie.preferences.ttl%

    stats:
        class: 'QL\Hal\Services\StatsService'
        arguments:
            - @doctrine.em
            - @clock
            - %date.timezone%
        calls:
            - ['setCache', [@cache]]
            - ['setCacheTTL', [%cache.stats.ttl%]]

    redis:
        class: 'Predis\Client'
        arguments:
            - %redis.server%
            - {prefix: '%redis.prefix%:'}

    ####################################################################################################################
    # Crypto
    ####################################################################################################################

    encrypter:
        class: 'QL\Hal\Core\Crypto\Encrypter'
        arguments: [%encrypter.publickey%]

    ####################################################################################################################
    # AWS
    ####################################################################################################################

    eb:
        class: 'QL\Hal\Services\ElasticBeanstalkService'
        arguments:
            - @aws.eb
            - %aws.credentials.key%
            - %aws.credentials.secret%

        calls:
            - ['setCache', [@cache]]
            - ['setCacheTTL', [%cache.aws.ttl%]]

    aws.credentials.cache:
        class: 'Guzzle\Cache\DoctrineCacheAdapter'
        arguments: [@aws.credentials.cache.source]
    aws.credentials.cache.source:
        # class: 'Doctrine\Common\Cache\FilesystemCache'
        # arguments: ['/tmp/cache']
        class: 'Doctrine\Common\Cache\ArrayCache'

    aws.eb:
        class: 'Aws\ElasticBeanstalk\ElasticBeanstalkClient'
        factory: ['Aws\ElasticBeanstalk\ElasticBeanstalkClient', 'factory']
        arguments:
            -
                credentials.cache: @aws.credentials.cache
                region: %aws.region%
                key: %aws.credentials.key%
                secret: %aws.credentials.secret%

    ######################################################################################################################
    # TWIG STUFF
    ######################################################################################################################

    twig.auto.template:
        parent: 'twig.template'
        class: 'QL\Kraken\Application\AutoRenderingTemplate'
        calls: [['setResponse', [@slim.response]]]

    twig.extension.hal:
        class: 'QL\Hal\Twig\HalExtension'
        arguments:
            - @slim.cookies
            - @global.message
            - @url.helper
            - @utility.time.formatter
            - @name.helper

    twig.extension.hal.global:
        class: 'QL\Hal\Twig\GlobalExtension'
        arguments:
            - @service_container
            - @slim.request
            - @session
            - @doctrine.em
        calls:
            - ['addGlobal', ['applicationTitle', %application.title%]]
            - ['addGlobal', ['applicationSha', %application.sha%]]
            - ['addGlobal', ['applicationVersion', %application.major.version%]]
            - ['addGlobal', ['navItems', %navigation.list%]]
            - ['addGlobal', ['session', @session]]

    twig.extension.permissions:
        class: 'QL\Hal\Twig\PermissionExtension'
        arguments: [@permissions]

    twig.extension.github:
        class: 'QL\Hal\Twig\GithubExtension'
        arguments: [@url.helper, @github]

    twig.extension.ansi:
        class: 'SensioLabs\AnsiConverter\Bridge\Twig\AnsiExtension'
        arguments: [@ansi.converter]
    twig.extension.status:
        class: 'QL\Hal\Twig\StatusExtension'

    # Twig Environment
    twig.environment:
        parent: 'panthor.twig.environment'
        calls:
            - ['addExtension', [@twig.extension.hal]]
            - ['addExtension', [@twig.extension.hal.global]]
            - ['addExtension', [@twig.extension.permissions]]
            - ['addExtension', [@twig.extension.github]]
            - ['addExtension', [@twig.extension.ansi]]
            - ['addExtension', [@twig.extension.status]]
            - ['addExtension', [@kraken.twig.extension]]

    ansi.converter:
        class: 'SensioLabs\AnsiConverter\AnsiToHtmlConverter'
        arguments: [@ansi.convert.theme, true]

    ansi.convert.theme:
        class: 'SensioLabs\AnsiConverter\Theme\Theme'

    ####################################################################################################################
    # GitHub
    ####################################################################################################################

    github:
        class: 'QL\Hal\Services\GithubService'
        arguments:
            - @github.userService
            - @github.repoService
            - @github.refService
            - @github.pullService
            - @github.commitService
            - @github.pager
            - @github.commitRepo
            - @github.members

    github.client:
        class: 'Github\Client'
        arguments: [@github.http.client]

    github.http.client:
        class: 'QL\Hal\Github\CachedHttpClient'
        arguments:
            - {base_url: %github.baseurl%}
        calls:
            - ['authenticate', [%github.token%, null, 'http_token']]
            - ['setCache', [@cache.github]]

    github.pager:
        class: 'Github\ResultPager'
        arguments: [@github.client]

    github.orgService:
        class: 'Github\Api\Organization'
        arguments: [@github.client]

    github.pullService:
        class: 'Github\Api\PullRequest'
        arguments: [@github.client]

    github.refService:
        class: 'Github\Api\GitData\References'
        arguments: [@github.client]

    github.commitService:
        class: 'Github\Api\GitData\Commits'
        arguments: [@github.client]

    github.repoService:
        class: 'Github\Api\Repo'
        arguments: [@github.client]

    github.userService:
        class: 'Github\Api\User'
        arguments: [@github.client]

    github.commitRepo:
        class: 'Github\Api\Repository\Commits'
        arguments: [@github.client]

    github.members:
        class: 'Github\Api\Organization\Members'
        arguments: [@github.client]

    ####################################################################################################################
    # Logging
    ####################################################################################################################

    logger:
        class: 'MCP\Service\Logger\Logger'
        arguments: [@logger.mcp.service, @logger.mcp.factory]

    logger.mcp.service:
        class: 'MCP\Service\Logger\Service\GuzzleService'
        arguments: [@logger.mcp.guzzle, @logger.mcp.renderer, true]
    logger.mcp.guzzle:
        class: 'Guzzle\Http\Client'
        arguments: [%logger.mcp.host%]
    logger.mcp.renderer:
        class: 'MCP\Service\Logger\Renderer\XmlRenderer'
        arguments: [@logger.mcp.writer]
    logger.mcp.writer:
        class: 'XMLWriter'

    logger.mcp.factory:
        class: 'MCP\Service\Logger\Adapter\Psr\MessageFactory'
        arguments: ['@clock']
        calls:
            - ['setDefaultProperty', ['applicationId', %application.id%]]
            # replaced at runtime, maybe
            - ['setDefaultProperty', ['machineIPAddress', @logger.mcp.serverIp]]
            # replaced at runtime
            - ['setDefaultProperty', ['machineName', 'localhost']]
    logger.mcp.serverIp:
        class: 'MCP\DataType\IPv4Address'
        factory: ['MCP\DataType\IPv4Address', 'create']
        arguments: ['0.0.0.0']

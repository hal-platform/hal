imports:
    - resource: di/services.yml
    - resource: di/services.api.yml
    - resource: di/services.middleware.yml
    - resource: di/controllers.yml
    - resource: di/controllers.admin.yml
    - resource: di/controllers.repository.yml
    - resource: di/controllers.api.yml

services:

    ######################################################################################################################
    # RUN TIME INJECTED (SYNTHETIC) SERVICES
    ######################################################################################################################

    # Set by bouncers
    currentUser:   { synthetic: true }
    requester:     { synthetic: true }

    hal.user:      { synthetic: true }
    hal.userType:  { synthetic: true }

    ######################################################################################################################
    # DOCTRINE CONFIGURATION
    ######################################################################################################################

    doctrine.proxy.dir:
        class: 'NOTHING_TO_SEE_HERE'
        factory: [@directory.helper, 'fullPath']
        arguments: ['.doctrine']

    doctrine.em.events:
        class: 'Doctrine\Common\EventManager'
        calls:
            - ['addEventListener', [['onFlush'], @doctrine.listener.logger]]
            - ['addEventListener', [['prePersist'], @doctrine.listener.persist]]
            - ['addEventListener', [['prePersist'], @doctrine.listener.kraken.persist]]

    doctrine.listener.logger:
        class: 'QL\Hal\Doctrine\EntityChangeLogger'
        arguments: [@user.helper, @clock]

    doctrine.listener.persist:
        class: 'QL\Hal\Core\DoctrinePersistListener'
        arguments: [@clock, @doctrine.random.id]

    ######################################################################################################################
    # APPLICATION
    ######################################################################################################################

    slim:
        parent: 'panthor.slim'
        # arguments:
            # - %slim.configuration%
        calls:
            - ['add', [@slim.session]]

    slim.hook.logger:
        class: 'QL\Hal\Slim\McpLoggerHook'
        arguments: [@logger.mcp.factory]
    slim.hook.errors:
        class: 'QL\Hal\Slim\ErrorHandlerHook'
        arguments:
            - @exception.dispatcher
            - @logger
            - @error.pages.twig

    slim.hook.routes.api:
        class: 'QL\Panthor\Slim\RouteLoaderHook'
        arguments: [@service_container, %routes.api%]

    slim.session:
        class: 'QL\Hal\Slim\SessionMiddleware'
        arguments: [@session.handler, @service_container]

    hal.pushfile:
        class: 'dynamic_scalar'
        factory: [@directory.helper, 'fullPath']
        arguments: ['.hal9000.push.yml']

    ######################################################################################################################
    # ERROR & EXCEPTION HANDLING
    ######################################################################################################################

    exception.dispatcher:
        class: 'QL\ExceptionToolkit\ExceptionDispatcher'

    ######################################################################################################################
    # CACHING
    ######################################################################################################################

    cache:
        class: 'MCP\Cache\PredisCache'
        arguments: [@redis]

    cache.github:
        class: 'QL\Hal\Github\MCPCache'
        arguments: [@cache]

    cache.doctrine:
        class: 'QL\Hal\Doctrine\PredisCache'
        arguments: [@redis, %cache.doctrine.ttl%]

    ######################################################################################################################
    # HELPERS
    ######################################################################################################################

    url.helper:
        class: 'QL\Hal\Helpers\UrlHelper'
        arguments:
            - @slim.request
            - @slim.response
            - @slim.router
            - @github

    directory.helper:
        class: 'QL\Hal\Helpers\DirectoryHelper'
        arguments: [@root]

    user.helper:
        class: 'QL\Hal\Helpers\LazyUserHelper'
        arguments: [@service_container]

    api.helper:
        class: 'QL\Hal\Helpers\ApiHelper'
        arguments: [@url.helper, @slim.request, %api.cachetimes%]
        calls:
            - ['setCache', [@cache]]

    name.helper:
        class: 'QL\Hal\Helpers\NameHelper'

    utility.id.generator:
        class: 'QL\Hal\Core\JobIdGenerator'
        arguments:
            - %application.major.version%
            - %unique.alphabet%
            - %unique.size%

    utilty.github.oauth:
        class: 'QL\Hal\Helpers\GithubOAuthHelper'
        arguments:
            - @guzzle
            - %github.baseurl%
            - %github.site.baseurl%
            - %github.app.id%
            - %github.app.secret%

    utility.time.formatter:
        class: 'QL\Hal\Utility\TimeFormatter'
        arguments: [@clock, %date.timezone%]

    guzzle:
        class: 'GuzzleHttp\Client'

    ####################################################################################################################
    # SESSION
    ####################################################################################################################

    session.flasher:
        class: 'QL\Hal\Flasher'
        arguments: [@session, @url]

    session:
        class: 'QL\Hal\Session'
        factory: [@session.handler, 'load']

    session.handler:
        class: 'QL\Hal\SessionHandler'
        arguments:
            - @slim.cookies
            - @session.encryption
            - %session.cookie.configuration%

    session.encryption:
        class: 'MCP\Crypto\AES'
        arguments: [%session.encryption.secret%]

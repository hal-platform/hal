imports:
    - resource: 'di/services.yml'
    # - resource: 'di/services.api.yml'
    # - resource: 'di/services.middleware.yml'
    # - resource: 'di/controllers.yml'
    # - resource: 'di/controllers.admin.yml'
    # - resource: 'di/controllers.application.yml'
    # - resource: 'di/controllers.api.yml'
    # - resource: 'di/controllers.api.crud.yml'
    # - resource: 'di/controllers.api.internal.yml'

services:
    notFoundHandler:     { alias: 'panthor.handler.notFoundHandler' }
    notAllowedHandler:   { alias: 'panthor.handler.notAllowedHandler' }
    phpErrorHandler:     { alias: 'panthor.handler.phpErrorHandler' }
    errorHandler:        { alias: 'panthor.handler.errorHandler' }

    ####################################################################################################################
    # RUN TIME INJECTED (SYNTHETIC) SERVICES
    ####################################################################################################################

    # Set by login or token middleware
    currentUser:         { synthetic: true }

    hal.build:           { synthetic: true }
    hal.push:            { synthetic: true }

    hal.user:            { synthetic: true }
    hal.userType:        { synthetic: true }
    hal.userPermission:  { synthetic: true }

    hal.application:     { synthetic: true }
    hal.credential:      { synthetic: true }
    hal.deployment:      { synthetic: true }
    hal.encrypted:       { synthetic: true }
    hal.environment:     { synthetic: true }
    hal.server:          { synthetic: true }

    hal.view:            { synthetic: true }
    hal.pool:            { synthetic: true }

    ####################################################################################################################
    # DOCTRINE CONFIGURATION
    ####################################################################################################################

    doctrine.utility.lazy.user:
        class: 'Hal\UI\Utility\LazyUserRetriever'
        arguments: ['@service_container']

    ####################################################################################################################
    # SLIM
    ####################################################################################################################

    slim.router.loader:
        parent: 'router.loader'
        # calls:
            # %routes% is auto loaded by parent
            # - ['addRoutes', ['%routes.api%']]
            # - ['addRoutes', ['%routes.api.crud%']]
            # - ['addRoutes', ['%routes.admin%']]
            # - ['addRoutes', ['%routes.application%']]

    slim.global_middleware:
        class: 'QL\Panthor\Bootstrap\GlobalMiddlewareLoader'
        arguments: ['@service_container', '%global_middleware%']
    slim.global_middleware.logger:
        class: 'Hal\UI\Middleware\LoggerGlobalMiddleware'
        arguments: ['@mcp.logger.factory']

    # slim.session:
    #     class: 'Hal\UI\Slim\SessionMiddleware'
    #     arguments: ['@session.handler', '@service_container']

    hal.pushfile.path:
        class: 'stdClass'
        factory: ['QL\Panthor\Utility\Stringify', 'template']
        arguments: ['%%s/%%s', ['@root', '.hal9000.push.yml']]

    ####################################################################################################################
    # ERROR & EXCEPTION HANDLING
    ####################################################################################################################

    logger:
        parent: 'mcp.logger'

    content_handler:
        class: 'QL\Panthor\ErrorHandling\ContentHandler\LoggingContentHandler'
        arguments:
            - '@panthor.content_handler'
            - '@logger'
            - { error: 'critical' }

    ####################################################################################################################
    # CACHING
    ####################################################################################################################

    cache:
        class: 'QL\MCP\Cache\PredisCache'
        arguments: ['@redis']

    github.cache:
        class: 'QL\MCP\Cache\PredisCache'
        arguments: ['@redis']
        calls:
            - ['setMaximumTtl', ['%cache.github.default.ttl%']]

    ####################################################################################################################
    # HELPERS
    ####################################################################################################################

    utility.name.formatter:
        class: 'Hal\UI\Utility\NameFormatter'

    utility.id.generator:
        class: 'QL\Hal\Core\JobIdGenerator'
        arguments:
            - '%application.major.version%'
            - '%unique.alphabet%'
            - '%unique.size%'

    utility.time.formatter:
        class: 'Hal\UI\Utility\TimeFormatter'
        arguments: ['@clock', '%date.timezone%']

    guzzle:
        class: 'GuzzleHttp\Client'

    ####################################################################################################################
    # SESSION
    ####################################################################################################################

    # session.flasher:
    #     class: 'Hal\UI\Flasher'
    #     arguments: ['@session', '@uri']

    # session:
    #     class: 'Hal\UI\Session'
    #     factory: ['@session.handler', 'load']

    # session.handler:
    #     class: 'Hal\UI\SessionHandler'
    #     arguments:
    #         - '@slim.cookies'
    #         - '@session.encryption'
    #         - '%session.cookie.configuration%'

    # session.encryption:
    #     class: 'QL\Panthor\Encryption\LibsodiumSymmetricCrypto'
    #     arguments: ['%session.encryption.secret%']


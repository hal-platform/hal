imports:
    - resource: di/services.yml
    - resource: di/services.api.yml
    - resource: di/services.middleware.yml
    - resource: di/controllers.yml
    - resource: di/controllers.admin.yml
    - resource: di/controllers.application.yml
    - resource: di/controllers.api.yml
    - resource: di/controllers.api.crud.yml
    - resource: di/controllers.api.internal.yml

services:

    ####################################################################################################################
    # RUN TIME INJECTED (SYNTHETIC) SERVICES
    ####################################################################################################################

    # Set by login or token middleware
    currentUser:         { synthetic: true }

    hal.build:           { synthetic: true }
    hal.push:            { synthetic: true }

    hal.user:            { synthetic: true }
    hal.userType:        { synthetic: true }
    hal.userPermission:  { synthetic: true }

    hal.application:     { synthetic: true }
    hal.credential:      { synthetic: true }
    hal.deployment:      { synthetic: true }
    hal.encrypted:       { synthetic: true }
    hal.environment:     { synthetic: true }
    hal.server:          { synthetic: true }

    hal.view:            { synthetic: true }
    hal.pool:            { synthetic: true }

    ####################################################################################################################
    # DOCTRINE CONFIGURATION
    ####################################################################################################################

    doctrine.proxy.dir:
        class: 'stdClass'
        factory: ['QL\Panthor\Utility\Stringify', 'template']
        arguments: ['%%s/%%s', ['@root', '.doctrine']]

    doctrine.em.events:
        class: 'Doctrine\Common\EventManager'
        calls:
            - ['addEventListener', [['onFlush'], '@doctrine.listener.logger']]
            - ['addEventListener', [['onFlush'], '@doctrine.listener.kraken.logger']]
            - ['addEventListener', [['prePersist'], '@doctrine.listener.persist']]
            - ['addEventListener', [['prePersist'], '@doctrine.listener.kraken.persist']]

    doctrine.listener.logger:
        class: 'QL\Hal\Core\Listener\DoctrineChangeLogger'
        arguments:
            - '@clock'
            - '@doctrine.random'
            - '@doctrine.utility.lazy.user'

    doctrine.listener.persist:
        class: 'QL\Hal\Core\Listener\DoctrinePersistListener'
        arguments: ['@clock']

    doctrine.listener.kraken.persist:
        class: 'QL\Kraken\Core\Listener\DoctrinePersistListener'
        arguments: ['@clock']

    doctrine.listener.kraken.logger:
        class: 'QL\Kraken\Core\Listener\DoctrineChangeLogger'
        arguments:
            - '@clock'
            - '@doctrine.random'
            - '@doctrine.utility.lazy.user'

    doctrine.cache:
        class: 'QL\Hal\Core\Utility\DoctrinePredisCache'
        arguments: ['@redis', '%cache.doctrine.ttl%']

    doctrine.utility.lazy.user:
        class: 'QL\Hal\Utility\LazyUserRetriever'
        arguments: ['@service_container']

    ####################################################################################################################
    # SLIM
    ####################################################################################################################

    slim:
        parent: 'panthor.slim'
        # arguments:
            # - %slim.configuration%
        calls:
            - ['add', ['@panthor.middleware.error_handling']]
            - ['add', ['@slim.session']]

    app.slim.hook.routes:
        parent: 'slim.hook.routes'
        calls:
            # %routes% is auto loaded by parent
            - ['addRoutes', ['%routes.api%']]
            - ['addRoutes', ['%routes.api.crud%']]
            - ['addRoutes', ['%routes.admin%']]
            - ['addRoutes', ['%routes.application%']]
            - ['addRoutes', ['%kraken.routes%']]

    slim.session:
        class: 'QL\Hal\Slim\SessionMiddleware'
        arguments: ['@session.handler', '@service_container']

    hal.pushfile.path:
        class: 'stdClass'
        factory: ['QL\Panthor\Utility\Stringify', 'template']
        arguments: ['%%s/%%s', ['@root', '.hal9000.push.yml']]

    ####################################################################################################################
    # TRP COOKIES
    ####################################################################################################################

    cookie.encryption:
        parent: 'panthor.plugin.cookie_encryption.trp_cookie'

    ####################################################################################################################
    # ERROR & EXCEPTION HANDLING
    ####################################################################################################################

    error.handler:
        class: 'QL\Panthor\ErrorHandling\ErrorHandler'
        arguments: ['@logger']
        calls:
            - ['setStacktraceLogging', ['%error_handling.log_stacktrace%']]
            - ['setThrownErrors', ['%error_handling.thrown_errors%']]
            - ['setLoggedErrors', ['%error_handling.logged_errors%']]
            - ['addHandler', ['@error.handler.api_not_found']]
            - ['addHandler', ['@panthor.error_handling.handler.not_found']]
            - ['addHandler', ['@panthor.error_handling.handler.http_problem']]
            - ['addHandler', ['@panthor.error_handling.handler.request']]
            - ['addHandler', ['@panthor.error_handling.handler.base']]

    panthor.error_handling.html_renderer.twig:
        class: 'QL\Panthor\Twig\LazyTwig'
        arguments: ['@error.failsafe.environment', '@twig.context']
        calls: [['setTemplate', ['%error_handling.html_template%']]]

    error.handler.api_not_found:
        class: 'QL\Hal\Application\APINotFoundHandler'
        arguments: ['@panthor.error_handling.problem_renderer']

    exception.logger:
        class: 'QL\Hal\Application\ExceptionLogger'
        arguments: ['@logger']

    # Twig error environment - limit the extensions used here, so we can ensure the error will render
    error.failsafe.environment:
        parent: 'panthor.twig.environment'
        calls:
            - ['addExtension', ['@twig.extension.hal']]
            - ['addExtension', ['@twig.extension.hal.global']]

    ####################################################################################################################
    # CACHING
    ####################################################################################################################

    cache:
        class: 'MCP\Cache\PredisCache'
        arguments: ['@redis']

    cache.github:
        class: 'QL\Hal\Github\MCPCache'
        arguments: ['@cache']

    ####################################################################################################################
    # HELPERS
    ####################################################################################################################

    utility.name.formatter:
        class: 'QL\Hal\Utility\NameFormatter'

    utility.id.generator:
        class: 'QL\Hal\Core\JobIdGenerator'
        arguments:
            - '%application.major.version%'
            - '%unique.alphabet%'
            - '%unique.size%'

    utility.time.formatter:
        class: 'QL\Hal\Utility\TimeFormatter'
        arguments: ['@clock', '%date.timezone%']

    guzzle:
        class: 'GuzzleHttp\Client'

    ####################################################################################################################
    # SESSION
    ####################################################################################################################

    session.flasher:
        class: 'QL\Hal\Flasher'
        arguments: ['@session', '@url']

    session:
        class: 'QL\Hal\Session'
        factory: ['@session.handler', 'load']

    session.handler:
        class: 'QL\Hal\SessionHandler'
        arguments:
            - '@slim.cookies'
            - '@session.encryption'
            - '%session.cookie.configuration%'

    session.encryption:
        class: 'MCP\Crypto\Package\TamperResistantPackage'
        arguments: ['@session.encryption.factory', '%session.encryption.secret%']

    session.encryption.factory:
        class: 'MCP\Crypto\Primitive\Factory'

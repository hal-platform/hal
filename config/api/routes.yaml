parameters:
    routes.api:

        api.docs:
            route: '/docs/api'
            stack: ['docs.api']

        api.index:
            method: 'GET'
            route: '/api'
            stack: ['index.api']

        api:
            route: '/api'
            stack: ['middleware.api_caching']
            routes:

                ########################################################################################################
                # queue
                ########################################################################################################

                api.queue:
                    method: 'GET'
                    route: '/queue'
                    stack: ['queue.api']

                api.queue.refresh:
                    method: 'GET'
                    route: '/queue-refresh/{jobs:%r.api.queue%}'
                    stack: ['queue.refresh.api']

                api.queue.history:
                    method: 'GET'
                    route: '/queue/date/{date:%r.date%}'
                    stack: ['queue.history.api']

                ########################################################################################################
                # organizations
                ########################################################################################################

                api.organizations:
                    method: 'GET'
                    route: '/organizations'
                    stack: ['organizations.api']

                api.organization:
                    method: 'GET'
                    route: '/organizations/{organization:%r.guid%}'
                    stack: ['middleware.api_require_entity', 'organization.api']

                ########################################################################################################
                # applications
                ########################################################################################################

                api.applications:
                    method: 'GET'
                    route: '/applications'
                    stack: ['applications.api']
                api.applications.paged:
                    method: 'GET'
                    route: '/applications/page/{page:%r.digit%}'
                    stack: ['applications.api']

                api.application.management:
                    route: '/applications/{application:%r.guid%}'
                    stack: ['middleware.api_require_entity']
                    routes:

                        api.application:
                            method: 'GET'
                            route: ''
                            stack: ['application.api']

                        api.targets:
                            method: 'GET'
                            route: '/targets'
                            stack: ['targets.api']

                        # are these application routes or build/push routes?
                        # It's nice to be able to use route groups to nest common url prefixes.

                        api.builds:
                            method: 'GET'
                            route: '/builds'
                            stack: ['builds.api']
                        api.builds.history:
                            method: 'GET'
                            route: '/builds/page/{page:%r.digit%}'
                            stack: ['builds.api']

                        api.releases:
                            method: 'GET'
                            route: '/releases'
                            stack: ['releases.api']
                        api.releases.history:
                            method: 'GET'
                            route: '/releases/page/{page:%r.digit%}'
                            stack: ['releases.api']

                ########################################################################################################
                # lolwut
                ########################################################################################################

                api.groups:
                    method: 'GET'
                    route: '/groups'
                    stack: ['groups.api']

                api.groups.paged:
                    method: 'GET'
                    route: '/groups/page/{page:%r.digit%}'
                    stack: ['groups.api']

                api.group:
                    method: 'GET'
                    route: '/groups/{group:%r.guid%}'
                    stack: ['middleware.api_require_entity', 'group.api']

                ########################################################################################################
                # deployment targets
                ########################################################################################################

                api.target.management:
                    route: '/targets/{target:%r.guid%}'
                    stack: ['middleware.api_require_entity']
                    routes:
                        api.target:
                            method: 'GET'
                            route: ''
                            stack: ['target.api']

                        api.target.history:
                            method: 'GET'
                            route: '/releases'
                            stack: ['target.history.api']
                        api.target.history.paged:
                            method: 'GET'
                            route: '/releases/page/{page:%r.digit%}'
                            stack: ['target.history.api']

                        api.target.current_release:
                            method: 'GET'
                            route: '/current-release'
                            stack: ['target.current_release.api']

                ########################################################################################################
                # builds
                ########################################################################################################

                api.build.management:
                    route: '/builds/{build:%r.guid%}'
                    stack: ['middleware.api_require_entity']
                    routes:
                        api.build:
                            method: 'GET'
                            route: ''
                            stack: ['build.api']

                        api.build.events:
                            method: 'GET'
                            route: '/events'
                            stack: ['build.events.api']

                api.build.history:
                    method: 'GET'
                    route: '/builds'
                    stack: ['builds.history.api']

                api.build.history.paged:
                    method: 'GET'
                    route: '/builds/page/{page:%r.digit%}'
                    stack: ['builds.history.api']

                ########################################################################################################
                # releases
                ########################################################################################################

                api.releases.management:
                    route: '/releases/{release:%r.guid%}'
                    stack: ['middleware.api_require_entity']
                    routes:
                        api.release:
                            method: 'GET'
                            route: ''
                            stack: ['release.api']

                        api.release.events:
                            method: 'GET'
                            route: '/events'
                            stack: ['release.events.api']

                api.release.history:
                    method: 'GET'
                    route: '/releases'
                    stack: ['middleware.api_require_entity', 'releases.history.api']

                api.release.history.paged:
                    method: 'GET'
                    route: '/releases/page/{page:%r.digit%}'
                    stack: ['middleware.api_require_entity', 'releases.history.api']

                ########################################################################################################
                # job events
                ########################################################################################################

                api.event:
                    method: 'GET'
                    route: '/job-events/{event:%r.guid%}'
                    stack: ['middleware.api_require_entity', 'event.api']

                ########################################################################################################
                # environments
                ########################################################################################################

                api.environments:
                    method: 'GET'
                    route: '/environments'
                    stack: ['environments.api']

                api.environment:
                    method: 'GET'
                    route: '/environments/{environment:%r.guid%}'
                    stack: ['middleware.api_require_entity', 'environment.api']

                ########################################################################################################
                # version control providers
                ########################################################################################################

                api.vcs_providers:
                    method: 'GET'
                    route: '/vcs-providers'
                    stack: ['TODO_TODO_TODO']

                api.vcs_provider:
                    method: 'GET'
                    route: '/vcs-providers/{system_vcs:%r.guid%}'
                    stack: ['middleware.api_require_entity', 'TODO_TODO_TODO']

                ########################################################################################################
                # users
                ########################################################################################################

                api.user.management:
                    route: '/users/{user:%r.guid%}'
                    stack: ['middleware.api_require_entity']
                    routes:
                        api.user:
                            method: 'GET'
                            route: ''
                            stack: ['user.api']

                api.users:
                    method: 'GET'
                    route: '/users'
                    stack: ['users.api']
                api.users.paged:
                    method: 'GET'
                    route: '/users/page/{page:%r.digit%}'
                    stack: ['users.api']



// Apply trailing whitespace. The $property can be margin or padding.
@mixin trailer($lines: 1, $font-size: $base-font-size) {
    $rhythm: ($lines * $base-line-height) / $font-size;
    margin-bottom: $rhythm * $font-unit;
}

// Apply leading whitespace. The $property can be margin or padding.
@mixin leader($lines: 1, $font-size: $base-font-size) {
    $rhythm: ($lines * $base-line-height) / $font-size;
    margin-top: $rhythm * $font-unit;
}

// Shorthand mixin to apply whitespace for top and bottom margins and padding.
@mixin rhythm($leader: 0, $padding-leader: 0, $padding-trailer: 0, $trailer: 0, $font-size: $base-font-size) {
  @include leader($leader, $font-size);
  // @include padding-leader($padding-leader, $font-size);
  // @include padding-trailer($padding-trailer, $font-size);
  @include trailer($trailer, $font-size);
}

// // Calculate rhythm units.
// @function rhythm(
//   $lines: 1,
//   $font-size: $base-font-size,
//   $offset: 0
// ) {


//   $rhythm: $font-unit * ($lines * $base-line-height - $offset) / $font-size;
//   // Round the pixels down to nearest integer.
//   @if unit($rhythm) == px {
//     $rhythm: floor($rhythm);
//   }
//   @return $rhythm;
// }

@function tint($color, $percentage) {
    @return mix(#ffffff, $color, $percentage);
}

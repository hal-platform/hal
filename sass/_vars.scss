// ==========================================================================
// Variables
// ========================================================================== */
//
// These variables give you access to change many of the values in Scales.
// You should also add your own project specific variables to this file.
// Some values are in px for familiarity, but are converted to em.
///


//
// Base font and line height for vertical rhythm.
// For accessibility, $base-line-height should be 1.5 times the $base-font-size
// http://www.w3.org/TR/WCAG20/#visual-audio-contrast-visual-presentation
///
$base-font-size: 18px;
$base-line-height: 27px;

//
// Set this to true to cut the space between lines in half.
// Your vertical rhythm will not line up with the pink debug lines if you use this.
///
$round-to-nearest-half-line: false;

//
// Modular Scale
//
// Instead of setting arbitrary values for font sizes, padding, widths, etc.
// we can use values up and down our modular scale which have meaning
// in relation to one another.
//
// Don't be scared. Start here: http://thesassway.com/projects/modular-scale
//
///
$base-size: $base-font-size $base-line-height;
$ratio: fourth();

//
// At 16px $base-font-size your available modular scale values are:
//
// ms(-5)  =   8px
// ms(-4)  =   9px
// ms(-3)  =  10px
// ms(-1)  =  12px
// ms(0)   =  16px
// ms(1)   =  18px
// ms(2)   =  21px
// ms(3)   =  24px
// ms(4)   =  28px
// ms(5)   =  32px
// ms(6)   =  38px
// ms(7)   =  43px
// ms(8)   =  51px
// ms(9)   =  57px
// ms(10)  =  67px
///

//
// This will output the modular scale values when you compile. Uncomment out to use.
///
//@include ms-list();

//
// A good primer on Compass Vertical Rhythm. Read this before you get lost:
// http://atendesigngroup.com/blog/vertical-rhythm-compass
///
@include establish-baseline;


//
// Responsive design breakpoints
//
// Scales is a mobile-first framework, so it needs to know when you want
// to begin applying "non-mobile" styles to the design patterns.
//
// It is not advisable to set breakpoints in responsive designs based on specific
// device widths. Instead, breakpoints should be applied when your content begins
// to look awkward. If there are other widths that you need to specifically support
// and a named variable makes sense, feel free to add it here (ex. $desk-start: 64.0625em; // 1025px ).
//
// Using ems instead of px allows your breakpoints to be relative to your $base-font-size.
//
// Usage:
// @media screen and (min-width: $palm-end) { [Styles Here] }
///
$palm-end: 30.0625em; // 481px


//
// Heading sizes.
///
$h1-size: ms(5); // .alpha
$h2-size: ms(4); // .beta
$h3-size: ms(3); // .gamma
$h4-size: ms(2); // .delta
$h5-size: ms(1); // .epsilon
$h6-size: ms(0); // .zeta

//
// Variables for small text sizes
///
$small-text: ms(-1);
$micro-text: ms(-3);

//
// Set your default font stack and headline font options.
///
$typeface: sans-serif;
$headline-font: "futura-pt", sans-serif;
$headline-weight: normal;

@import "partials/colors";